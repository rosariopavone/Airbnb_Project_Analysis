<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.24.0202.0949                               -->
<workbook original-version='18.1' source-build='2023.1.10 (20231.24.0202.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.RefreshableParameterRanges.true...RefreshableParameterRanges />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='n' datatype='integer' name='[Parametro 10]' param-domain-type='any' role='measure' type='quantitative' value='360'>
        <calculation class='tableau' formula='360' />
      </column>
      <column caption='Number_Of_Houses' datatype='integer' name='[Parametro 11]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='10' min='7' />
      </column>
      <column caption='Location_Filter' datatype='string' name='[Parametro 12]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Occupance_Rate ' datatype='real' name='[Parametro 13]' param-domain-type='range' role='measure' type='quantitative' value='-0.44697348674337167'>
        <calculation class='tableau' formula='-0.44697348674337167' />
        <range max='0.5' min='-0.5' />
      </column>
      <column caption='Occupancy_Rate_Vatiation_In_Percentage' datatype='real' name='[Parametro 14]' param-domain-type='range' role='measure' type='quantitative' value='5.'>
        <calculation class='tableau' formula='5.' />
        <range max='5.0' min='-5.0' />
      </column>
      <column _.fcp.RefreshableParameterRanges.true...default-value-field='[Parameters].[Parametro 2]' caption='BUDGET' datatype='real' name='[Parametro 1]' param-domain-type='range' role='measure' type='quantitative' value='1200000.'>
        <calculation class='tableau' formula='1200000.' />
        <range max='1200000.0' min='700000.0' />
      </column>
      <column caption='BUDGET MAX' datatype='real' name='[Parametro 2]' param-domain-type='any' role='measure' type='quantitative' value='1200000.'>
        <calculation class='tableau' formula='1200000.' />
      </column>
      <column caption='BUDGET MIN' datatype='real' name='[Parametro 3]' param-domain-type='any' role='measure' type='quantitative' value='700000.'>
        <calculation class='tableau' formula='700000.' />
      </column>
      <column caption='MaximumHouses' datatype='real' name='[Parametro 4]' param-domain-type='any' role='measure' type='quantitative' value='10.'>
        <calculation class='tableau' formula='10.' />
      </column>
      <column caption='MinimumHouses' datatype='real' name='[Parametro 5]' param-domain-type='any' role='measure' type='quantitative' value='7.'>
        <calculation class='tableau' formula='7.' />
      </column>
      <column caption='Available Budget' datatype='real' name='[Parametro 6]' param-domain-type='any' role='measure' type='quantitative' value='200000.'>
        <calculation class='tableau' formula='200000.' />
      </column>
      <column caption='Interest Rate' datatype='real' name='[Parametro 7]' param-domain-type='range' role='measure' type='quantitative' value='2.5'>
        <calculation class='tableau' formula='2.5' />
        <range granularity='0.1' max='2.6' min='2.0' />
      </column>
      <column caption='Occupancy Rate Variation' datatype='real' name='[Parametro 8]' param-domain-type='range' role='measure' type='quantitative' value='0.11180590295147574'>
        <calculation class='tableau' formula='0.11180590295147574' />
        <range max='0.5' min='-0.5' />
      </column>
      <column caption='Loan_Amount' datatype='integer' name='[Parametro 9]' param-domain-type='any' role='measure' type='quantitative' value='1000000'>
        <calculation class='tableau' formula='1000000' />
      </column>
    </datasource>
    <datasource caption='ID (TABLEAU_+_ID)' inline='true' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TABLEAU_+_ID' name='excel-direct.0krguq50q41kqi125zlw211ihueo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/gabbo/Downloads/TABLEAU_+_ID.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0krguq50q41kqi125zlw211ihueo' name='ID' table='[ID$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='6'>
            <column datatype='real' name='AIRBNB_YROI' ordinal='0' />
            <column datatype='real' name='RENT_YROI' ordinal='1' />
            <column datatype='real' name='House_Price' ordinal='2' />
            <column datatype='real' name='Local_annual_Taxes' ordinal='3' />
            <column datatype='real' name='Annual_Rent' ordinal='4' />
            <column datatype='integer' name='Number_AirBeb_House' ordinal='5' />
            <column datatype='real' name='AVG_HouseSize' ordinal='6' />
            <column datatype='string' name='HouseType' ordinal='7' />
            <column datatype='integer' name='id' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='integer' name='AVG_price_per_night' ordinal='10' />
            <column datatype='real' name='ANNUAL_AIRBNB_RENT' ordinal='11' />
            <column datatype='real' name='AIRNBN_SERVICE_COST' ordinal='12' />
            <column datatype='integer' name='Vendita(€/m²)' ordinal='13' />
            <column datatype='real' name='Affitto(€/m²)' ordinal='14' />
            <column datatype='real' name='Occupancy Rate' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0krguq50q41kqi125zlw211ihueo' name='ID' table='[ID$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='6'>
            <column datatype='real' name='AIRBNB_YROI' ordinal='0' />
            <column datatype='real' name='RENT_YROI' ordinal='1' />
            <column datatype='real' name='House_Price' ordinal='2' />
            <column datatype='real' name='Local_annual_Taxes' ordinal='3' />
            <column datatype='real' name='Annual_Rent' ordinal='4' />
            <column datatype='integer' name='Number_AirBeb_House' ordinal='5' />
            <column datatype='real' name='AVG_HouseSize' ordinal='6' />
            <column datatype='string' name='HouseType' ordinal='7' />
            <column datatype='integer' name='id' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='integer' name='AVG_price_per_night' ordinal='10' />
            <column datatype='real' name='ANNUAL_AIRBNB_RENT' ordinal='11' />
            <column datatype='real' name='AIRNBN_SERVICE_COST' ordinal='12' />
            <column datatype='integer' name='Vendita(€/m²)' ordinal='13' />
            <column datatype='real' name='Affitto(€/m²)' ordinal='14' />
            <column datatype='real' name='Occupancy Rate' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ID]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P10001:no:A1:P10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRBNB_YROI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AIRBNB_YROI]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>AIRBNB_YROI</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RENT_YROI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RENT_YROI]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>RENT_YROI</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>House_Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[House_Price]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>House_Price</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local_annual_Taxes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local_annual_Taxes]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>Local_annual_Taxes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual_Rent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual_Rent]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>Annual_Rent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_AirBeb_House</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number_AirBeb_House]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>Number_AirBeb_House</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVG_HouseSize</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVG_HouseSize]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>AVG_HouseSize</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HouseType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[HouseType]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>HouseType</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LIT_RIT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVG_price_per_night</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AVG_price_per_night]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>AVG_price_per_night</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ANNUAL_AIRBNB_RENT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ANNUAL_AIRBNB_RENT]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>ANNUAL_AIRBNB_RENT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRNBN_SERVICE_COST</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AIRNBN_SERVICE_COST]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>AIRNBN_SERVICE_COST</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendita(€/m²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vendita(€/m²)]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>Vendita(€/m²)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Affitto(€/m²)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Affitto(€/m²)]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>Affitto(€/m²)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupancy Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Occupancy Rate]</local-name>
            <parent-name>[ID]</parent-name>
            <remote-alias>Occupancy Rate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ID_84D15426046B410A8D2C6DD4785C2BDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
      <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
      <column caption='Annual Airbnb Rent' datatype='real' name='[ANNUAL_AIRBNB_RENT]' role='dimension' type='quantitative' />
      <column caption='AVG HouseSize' datatype='real' name='[AVG_HouseSize]' role='dimension' type='quantitative' />
      <column caption='AVG price per night' datatype='integer' name='[AVG_price_per_night]' role='dimension' type='quantitative' />
      <column caption='Annual Rent' datatype='real' name='[Annual_Rent]' role='measure' type='quantitative' />
      <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
      </column>
      <column caption='Montly_Loan_Payments' datatype='real' name='[Calculation_2108810552940580869]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[House_Price] * ([Parameters].[Parametro 7] / 100) / 12' />
      </column>
      <column caption='Return_Of_Investment' datatype='real' name='[Calculation_2108810552940814343]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='30 * ([ANNUAL_AIRBNB_RENT] - [Local_annual_Taxes]) - (([Parameters].[Parametro 7] / 100) * [House_Price])' />
      </column>
      <column caption='Tot_Investment_Cost' datatype='real' name='[Calculation_2108810552941027336]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(sum([House_Price]))+ ((RUNNING_SUM(sum([House_Price]))-200000)*[Parameters].[Parametro 7]/100)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total_Cost_Loan' datatype='real' name='[Calculation_2108810552941252617]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(sum([House_Price]))+ ((RUNNING_SUM(sum([House_Price]))-200000)*[Parameters].[Parametro 7]/100)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calcolo 1' datatype='real' name='[Calculation_2108810552943218699]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2108810552914001920]/ [RENT_YROI]' />
      </column>
      <column caption='AIRBNB_RENT_RATIO' datatype='real' name='[Calculation_2108810552944189453]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2108810552914001920]/ [RENT_YROI]' />
      </column>
      <column caption='Return_Of_Investment_Airbnb' datatype='real' name='[Calculation_928867451147411456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='30 * ([Calculation_2108810552914001920] - [Local_annual_Taxes]) - (([Parameters].[Parametro 7] / 100) * [House_Price])' />
      </column>
      <column caption='Percentage_Ocuppance_Rate' datatype='real' name='[Calculation_960111173205082114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Occupancy Rate] * 100) + [Parameters].[Parametro 14]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
      <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
      <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
      <column caption='Number AirBeb House' datatype='integer' name='[Number_AirBeb_House]' role='measure' type='quantitative' />
      <column caption='Rent Yroi' datatype='real' name='[RENT_YROI]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='ID' datatype='table' name='[__tableau_internal_object_id__].[ID_84D15426046B410A8D2C6DD4785C2BDF]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column-instance column='[HouseType]' derivation='Attribute' name='[attr:HouseType:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
      <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
      <group caption='Azione (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Azione (City,House Type)' hidden='true' name='[Action (City,House Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[HouseType]' />
        </groupfilter>
      </group>
      <group caption='Azione (City,House Type,Id)' hidden='true' name='[Action (City,House Type,Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[HouseType]' />
          <groupfilter function='level-members' level='[id]' />
        </groupfilter>
      </group>
      <group caption='Azione (City,Id)' hidden='true' name='[Action (City,Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[id]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusioni (City,House Type,Id)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:City:nk]' />
          <groupfilter function='level-members' level='[none:HouseType:nk]' />
          <groupfilter function='level-members' level='[none:id:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.587021' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.412979' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:HouseType:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1Br_1.5Bt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3Br_2Bt&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2Br_2Bt&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;2Br_1.5Bt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4Br_2Bt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3Br_1Bt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2Br_1Bt&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;3Br_3Bt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1Br_1Bt&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;4Br_3Bt&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Vizzini&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sciacca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Acireale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Balestrate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Caccamo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Capaci&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Castronovo di Sicilia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Corleone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Furnari&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grotte&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Militello Rosmarino&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Motta Sant&apos;Anastasia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pozzallo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roccavaldina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Piero Patti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Teresa di Riva&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spadafora&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ustica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Altavilla Milicia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Avola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Borgetto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Campobello di Mazara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Casteldaccia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cianciana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiumefreddo di Sicilia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibellina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lercara Friddi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mazzarino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montagnareale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pace del Mela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Piedimonte Etneo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Regalbuto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Giovanni Gemini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Croce Camerina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scordia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Villafranca Tirrena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Villafrati&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Santa Marina Salina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Assoro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burgio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Camporeale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Castelmola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comiso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forza d&apos;Agrò&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grammichele&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Licodia Eubea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Messina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Modica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monterosso Almo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palazzo Adriano&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Polizzi Generosa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riposto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marco d&apos;Alunzio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Margherita di Belice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tortorici&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tripi&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Pantelleria&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Marsala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adrano&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alcamo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baucina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Calatafimi-Segesta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Erice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gallodoro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ispica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malvagna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mirto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicolosi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raccuja&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salaparuta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sant&apos;Agata di Militello&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saponara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terme Vigliatore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Valledolmo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Acquaviva Platani&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barcellona Pozzo di Gotto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Calamonaci&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Capizzi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Castroreale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Custonaci&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaggi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gualtieri Sicaminò&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lucca Sicula&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Milo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mussomeli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Partanna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Priolo Gargallo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rodì Milici&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Pietro Clarenza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Venerina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sperlinga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Valderice&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aci Castello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buscemi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Camporotondo Etneo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Castelvetrano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comitini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Francavilla di Sicilia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graniti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Limina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mezzojuso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montevago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palazzolo Acreide&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pollina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roccalumera&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Mauro Castelverde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Maria di Licodia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solarino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Troina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zafferana Etnea&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Gela&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Siracusa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alimena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolognetta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cammarata&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Castel di Lucio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chiaramonte Gulfi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ficarra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Giarratana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lentini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mascalucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongiuffi Melia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Novara di Sicilia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Piana degli Albanesi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ravanusa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Filippo del Mela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Caterina Villarmosa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scillato&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Villafranca Sicula&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Altofonte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brolo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Campofelice di Roccella&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Castell&apos;Umberto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ciminna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Floresta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gioiosa Marea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Letojanni&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Melilli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montalbano Elicona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paceco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pietraperzia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reitano&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Giovanni la Punta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Elisabetta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serradifalco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trappeto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Villarosa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alì Terme&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bisacquino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caltavuturo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cassaro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cerda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ferla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Giardinello&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lascari&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Misilmeri&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niscemi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nizza di Sicilia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palermo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ramacca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Cataldo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sant&apos;Angelo di Brolo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sciara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrenova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Viagrande&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aci Catena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barrafranca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buseto Palizzolo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canicattì&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Castiglione di Sicilia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Condrò&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Francofonte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gratteri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Linguaglossa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Milazzo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Motta Camastra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Petrosino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Porto Empedocle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roccamena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Michele di Ganzaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sommatino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tusa&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Favignana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alcara li Fusi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belmonte Mezzagno&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caltabellotta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carlentini&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cefalù&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falcone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gangi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Itala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maniace&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicosia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pedara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raffadali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Salemi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sant&apos;Agata li Battiati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Savoca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Termini Imerese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trapani&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vallelunga Pratameno&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Agira&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alessandria della Rocca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belpasso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caltagirone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caronia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Centuripe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Favara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joppolo Giancaxio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marianopoli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Misterbianco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Petralia Soprana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ragalna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sambuca di Sicilia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sant&apos;Alessio Siculo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scaletta Zanclea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Terrasini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valverde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bivona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Camastra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Castel di Iudica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cesarò&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ficarazzi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giardini-Naxos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leni&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mascali&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monforte San Giorgio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Petralia Sottana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pettineo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Cono&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sant&apos;Angelo Muxaro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scicli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Torretta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Villabate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aliminusa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bompensiere&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Campobello di Licata&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Castelbuono&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chiusa Sclafani&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiumedinisi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giarre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leonforte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mazara del Vallo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monreale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oliveri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Piazza Armerina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Realmonte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Fratello&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Cristina Gela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sclafani Bagni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Agrigento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calascibetta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Capo d&apos;Orlando&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Catania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cattolica Eraclea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gagliano Castelferrato&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isnello&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maletto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mineo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Naro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Partinico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prizzi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rometta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Salvatore di Fitalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santo Stefano di Camastra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sutera&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Valdina&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Noto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aci Sant&apos;Antonio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bagheria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butera&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canicattini Bagni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Castrofilippo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Contessa Entellina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Furci Siculo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gravina di Catania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lipari&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Militello in Val di Catania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Motta d&apos;Affermo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palma di Montechiaro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portopalo di Capo Passero&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roccapalumba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Pier Niceto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Ninfa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sortino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ucria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bronte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Campofiorito&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Castellammare del Golfo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Catenanuova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cinisi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Floridia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Giuliana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Librizzi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Menfi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montallegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pachino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Piraino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ribera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Giuseppe Jato&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Flavia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Siculiana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trecastagni&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vita&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alì&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Biancavilla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caltanissetta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Casalvecchio Siculo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cerami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Geraci Siculo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lampedusa e Linosa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marineo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mistretta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nissoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Randazzo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Biagio Platani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sant&apos;Alfio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Torregrotta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venetico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Acquedolci&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aidone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Basicò&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calatabiano&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Capri Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Enna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Galati Mamertino&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Isola delle Femmine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malfa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mirabella Imbaccari&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Naso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paternò&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Racalmuto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rosolini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Vito Lo Capo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santo Stefano Quisquina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taormina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Valguarnera Caropepe&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Ragusa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aci Bonaccorsi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aragona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Buccheri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Campofranco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Castellana Sicula&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Collesano&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fondachelli-Fantina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Godrano&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Licata&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Merì&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montelepre&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pagliara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poggioreale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Riesi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Gregorio di Catania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Lucia del Mela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sinagra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tremestieri Etneo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vittoria&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:HouseType:nk]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;1Br_1Bt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1Br_1.5Bt&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;3Br_1Bt&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;3Br_2Bt&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2Br_2Bt&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;4Br_3Bt&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;2Br_1Bt&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;4Br_2Bt&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;3Br_3Bt&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;2Br_1.5Bt&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:id:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>3476831</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>39056060</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>27043988</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>669799218227511936</bucket>
            </map>
            <map to='#e15759'>
              <bucket>24880539</bucket>
            </map>
            <map to='#edc948'>
              <bucket>48005125</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>6157911</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:City:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Palermo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sciacca&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fiumefreddo di Sicilia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Favignana&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Scicli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Giardini-Naxos&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;IT&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Occupancy_Rate_Vatiation_In_Percentage' datatype='real' name='[Parametro 14]' param-domain-type='range' role='measure' type='quantitative' value='5.'>
          <calculation class='tableau' formula='5.' />
          <range max='5.0' min='-5.0' />
        </column>
        <column caption='Interest Rate' datatype='real' name='[Parametro 7]' param-domain-type='range' role='measure' type='quantitative' value='2.5'>
          <calculation class='tableau' formula='2.5' />
          <range granularity='0.1' max='2.6' min='2.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ID' id='ID_84D15426046B410A8D2C6DD4785C2BDF'>
            <properties context=''>
              <relation connection='excel-direct.0krguq50q41kqi125zlw211ihueo' name='ID' table='[ID$]' type='table'>
                <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='6'>
                  <column datatype='real' name='AIRBNB_YROI' ordinal='0' />
                  <column datatype='real' name='RENT_YROI' ordinal='1' />
                  <column datatype='real' name='House_Price' ordinal='2' />
                  <column datatype='real' name='Local_annual_Taxes' ordinal='3' />
                  <column datatype='real' name='Annual_Rent' ordinal='4' />
                  <column datatype='integer' name='Number_AirBeb_House' ordinal='5' />
                  <column datatype='real' name='AVG_HouseSize' ordinal='6' />
                  <column datatype='string' name='HouseType' ordinal='7' />
                  <column datatype='integer' name='id' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='integer' name='AVG_price_per_night' ordinal='10' />
                  <column datatype='real' name='ANNUAL_AIRBNB_RENT' ordinal='11' />
                  <column datatype='real' name='AIRNBN_SERVICE_COST' ordinal='12' />
                  <column datatype='integer' name='Vendita(€/m²)' ordinal='13' />
                  <column datatype='real' name='Affitto(€/m²)' ordinal='14' />
                  <column datatype='real' name='Occupancy Rate' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Offline' />
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filtro1' name='[Action3_AD1CBC4940F746B0AA60F77AAE46C6AE]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 5' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 5' />
      </command>
    </action>
    <action caption='Filtro3' name='[Action5_48C025B7FB484BCB96ACE3B1FC9C7447]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 5' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 5' />
      </command>
    </action>
    <action caption='Filtro5' name='[Action6_13276CE53B3E4E368967A7CEB186711B]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 5' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 5' />
      </command>
    </action>
    <action caption='Filtro4' name='[Action6_6FEBC889F57E42FAA8B2DA3697EFD685]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 5' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 5' />
      </command>
    </action>
    <action caption='Filtro2' name='[Action6_73C490338FA64B82B3AEB3C679067B1D]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filtra 1 (generato)' name='[Action7_DC4BBB5623CC4424932C84C0C96D2A4A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 5' type='sheet' worksheet='House_Recap_Investment' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 5' />
      </command>
    </action>
    <action caption='Filtra 4 (generato)' name='[Action7_E0730F31D82E4D209DF989ADF983A1FF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='Table_HousePrice_HouseType' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Adj/Occupancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black'>Adj/Occupancy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
            <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
            <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column caption='Number AirBeb House' datatype='integer' name='[Number_AirBeb_House]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2108810552914001920]' derivation='Avg' name='[avg:Calculation_2108810552914001920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Occupancy Rate]' derivation='Avg' name='[avg:Occupancy Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[cnt:id:qk]' included-values='in-range'>
            <min>20</min>
            <max>433</max>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Occupancy Rate])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([Number_AirBeb_House]) &gt;= 300' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_2108810552914001920])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([id]) &gt;= 20' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1.5Bt&quot;' />
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1Bt&quot;' />
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_2Bt&quot;' />
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1.5Bt&quot;' />
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1Bt&quot;' />
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_2Bt&quot;' />
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_1Bt&quot;' />
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_2Bt&quot;' />
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_3Bt&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[cnt:id:qk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='width' value='255' />
            <format attr='height' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' value='27' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' />
              <text column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Occupancy Rate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk] / [federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{0F5DC264-6915-4845-B943-BBCD8E4BC97F}' />
    </worksheet>
    <worksheet name='City/Yroi/HousePrice'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Cooper Black'>Cities/Adjusted_Airbnb_Yroi/House_Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
            <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
            <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2108810552914001920]' derivation='Avg' name='[avg:Calculation_2108810552914001920:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[House_Price]' derivation='Sum' name='[sum:House_Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_73C490338FA64B82B3AEB3C679067B1D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[HouseType]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]'>
            <groupfilter function='union' user:ui-action-filter='[Action6_73C490338FA64B82B3AEB3C679067B1D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Avola&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[id]' member='557793752104716032' />
                    <groupfilter function='member' level='[id]' member='934547293493552512' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Castellammare del Golfo&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;4Br_2Bt&quot;' />
                  <groupfilter function='member' level='[id]' member='602746854735840640' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Catania&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='member' level='[id]' member='37135137' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Marsala&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='member' level='[id]' member='45669307' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Noto&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[HouseType]' member='&quot;3Br_1Bt&quot;' />
                    <groupfilter function='member' level='[id]' member='25371587' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[HouseType]' member='&quot;4Br_3Bt&quot;' />
                    <groupfilter function='member' level='[id]' member='841049365638141056' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Palermo&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;3Br_2Bt&quot;' />
                  <groupfilter function='member' level='[id]' member='29624823' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Ragusa&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[HouseType]' member='&quot;2Br_1.5Bt&quot;' />
                    <groupfilter function='member' level='[id]' member='27043965' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[HouseType]' member='&quot;2Br_1Bt&quot;' />
                    <groupfilter function='member' level='[id]' member='12577769' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_2108810552914001920])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_2108810552914001920])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:HouseType:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]' />
              <color column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:House_Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{23BD3E65-AE02-4DDD-BD86-8B7ECCBFD498}' />
    </worksheet>
    <worksheet name='House Type and Rent Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black'>House Type and Rent Ratio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
            <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
            <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
            </column>
            <column caption='AIRBNB_RENT_RATIO' datatype='real' name='[Calculation_2108810552944189453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2108810552914001920]/ [RENT_YROI]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column caption='Number AirBeb House' datatype='integer' name='[Number_AirBeb_House]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column caption='Rent Yroi' datatype='real' name='[RENT_YROI]' role='measure' type='quantitative' />
            <column-instance column='[Occupancy Rate]' derivation='Avg' name='[avg:Occupancy Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Occupancy Rate])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([Number_AirBeb_House]) &gt; 300' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_2108810552944189453])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;10Br_8Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;11Br_11.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;11Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;17Br_2.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_2.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_3Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_2.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_3.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_3Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_1.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_2.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_3.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_3Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_4.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_4Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_1.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_2.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_3.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_3Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_4.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_4Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_1.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_2.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_3Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_4Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_5.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_6.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;5Br_6Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;6Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;6Br_4.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;6Br_5.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;6Br_5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;6Br_6Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;6Br_7Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;7Br_5.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;7Br_5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;7Br_6Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;7Br_8Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;8Br_1.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;8Br_7Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;8Br_9.5Bt&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' value='39' />
            <format attr='width' value='203' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Occupancy Rate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Occupancy Rate:qk]' />
              <text column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Occupancy Rate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk] / ([federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok] / [federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{324B097E-981B-4F8A-B0A5-01A8680EB502}' />
    </worksheet>
    <worksheet name='House_Recap_Investment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Cooper Black'>Investment Per Each Houses </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
            <datasource caption='Parametri' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Occupancy_Rate_Vatiation_In_Percentage' datatype='real' name='[Parametro 14]' param-domain-type='range' role='measure' type='quantitative' value='5.'>
              <calculation class='tableau' formula='5.' />
              <range max='5.0' min='-5.0' />
            </column>
            <column caption='Interest Rate' datatype='real' name='[Parametro 7]' param-domain-type='range' role='measure' type='quantitative' value='2.5'>
              <calculation class='tableau' formula='2.5' />
              <range granularity='0.1' max='2.6' min='2.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Annual Airbnb Rent' datatype='real' name='[ANNUAL_AIRBNB_RENT]' role='dimension' type='quantitative' />
            <column caption='AVG price per night' datatype='integer' name='[AVG_price_per_night]' role='dimension' type='quantitative' />
            <column caption='Montly_Loan_Payments' datatype='real' name='[Calculation_2108810552940580869]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[House_Price] * ([Parameters].[Parametro 7] / 100) / 12' />
            </column>
            <column caption='Return_Of_Investment' datatype='real' name='[Calculation_2108810552940814343]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='30 * ([ANNUAL_AIRBNB_RENT] - [Local_annual_Taxes]) - (([Parameters].[Parametro 7] / 100) * [House_Price])' />
            </column>
            <column caption='Tot_Investment_Cost' datatype='real' name='[Calculation_2108810552941027336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(sum([House_Price]))+ ((RUNNING_SUM(sum([House_Price]))-200000)*[Parameters].[Parametro 7]/100)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total_Cost_Loan' datatype='real' name='[Calculation_2108810552941252617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(sum([House_Price]))+ ((RUNNING_SUM(sum([House_Price]))-200000)*[Parameters].[Parametro 7]/100)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentage_Ocuppance_Rate' datatype='real' name='[Calculation_960111173205082114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Occupancy Rate] * 100) + [Parameters].[Parametro 14]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column-instance column='[AVG_price_per_night]' derivation='Attribute' name='[attr:AVG_price_per_night:ok]' pivot='key' type='ordinal' />
            <column-instance column='[City]' derivation='Attribute' name='[attr:City:nk]' pivot='key' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2108810552940580869]' derivation='Sum' name='[sum:Calculation_2108810552940580869:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2108810552940814343]' derivation='Sum' name='[sum:Calculation_2108810552940814343:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_960111173205082114]' derivation='Sum' name='[sum:Calculation_960111173205082114:qk]' pivot='key' type='quantitative' />
            <column-instance column='[House_Price]' derivation='Sum' name='[sum:House_Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2108810552941027336]' derivation='User' name='[usr:Calculation_2108810552941027336:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_2108810552941252617]' derivation='User' name='[usr:Calculation_2108810552941252617:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]' />
                <order field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:House_Price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940580869:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940814343:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[usr:Calculation_2108810552941252617:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_960111173205082114:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:House_Price:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940580869:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940814343:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[usr:Calculation_2108810552941027336:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[usr:Calculation_2108810552941252617:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_960111173205082114:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Inclusioni (City,House Type,Id)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1.5Bt&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:City:nk]' member='&quot;Giardini-Naxos&quot;' />
                    <groupfilter function='member' level='[none:id:ok]' member='39056060' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1Bt&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:City:nk]' member='&quot;Favignana&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:id:ok]' member='3476831' />
                        <groupfilter function='member' level='[none:id:ok]' member='669799218227511936' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:City:nk]' member='&quot;Fiumefreddo di Sicilia&quot;' />
                      <groupfilter function='member' level='[none:id:ok]' member='24880539' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:City:nk]' member='&quot;Palermo&quot;' />
                      <groupfilter function='member' level='[none:id:ok]' member='6157911' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_1.5Bt&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:City:nk]' member='&quot;Scicli&quot;' />
                    <groupfilter function='member' level='[none:id:ok]' member='27043988' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_5Bt&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:City:nk]' member='&quot;Sciacca&quot;' />
                    <groupfilter function='member' level='[none:id:ok]' member='48005125' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:City:nk]' />
                <hierarchy name='[none:HouseType:nk]' />
                <hierarchy name='[none:id:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:AVG_price_per_night:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[attr:AVG_price_per_night:ok]' member='12' />
              <groupfilter function='member' level='[attr:AVG_price_per_night:ok]' member='36' />
              <groupfilter function='member' level='[attr:AVG_price_per_night:ok]' member='196' />
              <groupfilter function='member' level='[attr:AVG_price_per_night:ok]' member='200' />
              <groupfilter function='member' level='[attr:AVG_price_per_night:ok]' member='377' />
              <groupfilter function='member' level='[attr:AVG_price_per_night:ok]' member='3000' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:City:nk]'>
            <groupfilter function='level-members' level='[attr:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]'>
            <groupfilter function='level-members' level='[none:HouseType:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Inclusioni (City,House Type,Id)]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[:Measure Names]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:City:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:AVG_price_per_night:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:AVG_price_per_night:ok]' value='32' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940814343:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Multiple Values]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:City:nk]' />
              <color column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940814343:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk] / ([federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok] / ([federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk] / [federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:AVG_price_per_night:ok])))</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C6109311-F426-4F22-B5D7-89DD1CEB014C}' />
    </worksheet>
    <worksheet name='Maps'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Cooper Black'>Map For Each Houses Selected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
            <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
            <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
            </column>
            <column caption='AIRBNB_RENT_RATIO' datatype='real' name='[Calculation_2108810552944189453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2108810552914001920]/ [RENT_YROI]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column caption='Rent Yroi' datatype='real' name='[RENT_YROI]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2108810552944189453]' derivation='Avg' name='[avg:Calculation_2108810552944189453:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Occupancy Rate]' derivation='Max' name='[max:Occupancy Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_AD1CBC4940F746B0AA60F77AAE46C6AE]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[City]' member='&quot;Giardini-Naxos&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[HouseType]' member='&quot;1Br_1.5Bt&quot;' />
                <groupfilter function='member' level='[id]' member='39056060' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Longitude (generated)]' field-type='quantitative' max='1808755.1016022675' min='1270356.9912873334' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Latitude (generated)]' field-type='quantitative' max='4727349.2291345336' min='4255887.0987142762' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552944189453:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552944189453:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[max:Occupancy Rate:qk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552944189453:qk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Latitude (generated)]</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3C141E43-27AA-4839-B039-5E9024C0A214}' />
    </worksheet>
    <worksheet name='MapsXOccupancyRate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Cooper Black'>Maps Per Occupancy Rate</run>
            <run fontname='Arial Black'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Occupancy Rate]' derivation='Max' name='[max:Occupancy Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[House_Price]' derivation='Min' name='[min:House_Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]'>
            <groupfilter function='union' user:ui-action-filter='[Action6_73C490338FA64B82B3AEB3C679067B1D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Avola&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[id]' member='557793752104716032' />
                    <groupfilter function='member' level='[id]' member='934547293493552512' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Castellammare del Golfo&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;4Br_2Bt&quot;' />
                  <groupfilter function='member' level='[id]' member='602746854735840640' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Catania&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='member' level='[id]' member='37135137' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Marsala&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='member' level='[id]' member='45669307' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Noto&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[HouseType]' member='&quot;3Br_1Bt&quot;' />
                    <groupfilter function='member' level='[id]' member='25371587' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[HouseType]' member='&quot;4Br_3Bt&quot;' />
                    <groupfilter function='member' level='[id]' member='841049365638141056' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Palermo&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[HouseType]' member='&quot;3Br_2Bt&quot;' />
                  <groupfilter function='member' level='[id]' member='29624823' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[City]' member='&quot;Ragusa&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[HouseType]' member='&quot;2Br_1.5Bt&quot;' />
                    <groupfilter function='member' level='[id]' member='27043965' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[HouseType]' member='&quot;2Br_1Bt&quot;' />
                    <groupfilter function='member' level='[id]' member='12577769' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Occupancy Rate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Longitude (generated)]' field-type='quantitative' max='2027227.0068701424' min='1159119.1601207929' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Latitude (generated)]' field-type='quantitative' max='4784379.2737630364' min='4278754.539077769' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]' />
              <size column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[max:Occupancy Rate:qk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[min:House_Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Latitude (generated)]</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{33224104-8479-47F5-858B-E039DF8253A0}' />
    </worksheet>
    <worksheet name='Table_HousePrice_HouseType'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Cooper Black'>Table Selection Per House Price and House Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
            <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
            <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[House_Price]' derivation='Sum' name='[sum:House_Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_73C490338FA64B82B3AEB3C679067B1D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[HouseType]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_73C490338FA64B82B3AEB3C679067B1D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[HouseType]' />
              <groupfilter function='level-members' level='[id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Inclusioni (City,House Type,Id)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Avola&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:id:ok]' member='557793752104716032' />
                    <groupfilter function='member' level='[none:id:ok]' member='934547293493552512' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Castellammare del Golfo&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:id:ok]' member='602746854735840640' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Catania&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:id:ok]' member='37135137' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Marsala&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:id:ok]' member='45669307' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Noto&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_1Bt&quot;' />
                    <groupfilter function='member' level='[none:id:ok]' member='25371587' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_3Bt&quot;' />
                    <groupfilter function='member' level='[none:id:ok]' member='841049365638141056' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Palermo&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:id:ok]' member='29624823' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Ragusa&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1.5Bt&quot;' />
                    <groupfilter function='member' level='[none:id:ok]' member='27043965' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1Bt&quot;' />
                    <groupfilter function='member' level='[none:id:ok]' member='12577769' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_2108810552914001920])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_2108810552914001920])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;1Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1.5Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;2Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_1Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;3Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_2Bt&quot;' />
                  <groupfilter function='member' level='[none:HouseType:nk]' member='&quot;4Br_3Bt&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type)]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Inclusioni (City,House Type,Id)]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:House_Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk] / ([federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok] / [federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{FA739CC4-9346-4FBA-A72A-0BA7D910FE44}' />
    </worksheet>
    <worksheet name='Top 10 cities based on  ADJ_AIRBNB_YROI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black'>Top 10 cities based on  ADJ_AIRBNB_YROI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
            <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
            <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column caption='Number AirBeb House' datatype='integer' name='[Number_AirBeb_House]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2108810552914001920]' derivation='Avg' name='[avg:Calculation_2108810552914001920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_AirBeb_House]' derivation='Count' name='[cnt:Number_AirBeb_House:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_2108810552914001920])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([Number_AirBeb_House]) &gt;= 300' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]' direction='DESC' using='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' />
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[cnt:Number_AirBeb_House:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]</cols>
      </table>
      <simple-id uuid='{B2C4EBCA-7973-4654-BD0E-A6EB11F2AC28}' />
    </worksheet>
    <worksheet name='Top 10 cities based on RENT_YROI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black'>Top 10 cities based on RENT_YROI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Number AirBeb House' datatype='integer' name='[Number_AirBeb_House]' role='measure' type='quantitative' />
            <column caption='Rent Yroi' datatype='real' name='[RENT_YROI]' role='measure' type='quantitative' />
            <column-instance column='[RENT_YROI]' derivation='Avg' name='[avg:RENT_YROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_AirBeb_House]' derivation='Count' name='[cnt:Number_AirBeb_House:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([RENT_YROI])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([Number_AirBeb_House]) &gt;= 300' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]' direction='DESC' using='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:RENT_YROI:qk]' />
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[cnt:Number_AirBeb_House:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:RENT_YROI:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:RENT_YROI:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:RENT_YROI:qk]</cols>
      </table>
      <simple-id uuid='{4EB116C6-355B-45C6-A465-AFDF63652352}' />
    </worksheet>
    <worksheet name='Top 5 types of house based on  ADJ_AIRBNB_YRO'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black'>Top 5 types of house based on  ADJ_AIRBNB_YRO</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
            <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
            <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
            </column>
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2108810552914001920]' derivation='Avg' name='[avg:Calculation_2108810552914001920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_2108810552914001920])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([HouseType]) &gt; 100' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:HouseType:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' direction='DESC' using='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' />
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[cnt:id:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#86bcb6' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]</cols>
      </table>
      <simple-id uuid='{C7BB42B7-AF81-46DB-A870-58077B9D9E8B}' />
    </worksheet>
    <worksheet name='Top 5 types of house based on  RENT_YROI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black'>Top 5 types of house based on  RENT_YROI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='Rent Yroi' datatype='real' name='[RENT_YROI]' role='measure' type='quantitative' />
            <column-instance column='[RENT_YROI]' derivation='Avg' name='[avg:RENT_YROI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([RENT_YROI])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([id]) &gt;= 100' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:HouseType:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' direction='DESC' using='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:RENT_YROI:qk]' />
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[cnt:id:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:RENT_YROI:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:RENT_YROI:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:RENT_YROI:qk]</cols>
      </table>
      <simple-id uuid='{FB12CF2F-A7E1-46DC-9C2B-647799195048}' />
    </worksheet>
    <worksheet name='Top_Per_Airbnb_Or_Rent'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Cooper Black'>Decision between  Airbnb or Rent </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ID (TABLEAU_+_ID)' name='federated.1ostkzy1y5fucf10xmzwu1h3lq1r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ostkzy1y5fucf10xmzwu1h3lq1r'>
            <column caption='Airbnb Yroi' datatype='real' name='[AIRBNB_YROI]' role='dimension' type='quantitative' />
            <column caption='Airnbn Service Cost' datatype='real' name='[AIRNBN_SERVICE_COST]' role='dimension' type='quantitative' />
            <column caption='Adjusted_Airbnb_Yroi' datatype='real' name='[Calculation_2108810552914001920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(&#13;&#10;  ([AIRBNB_YROI] * [House_Price]) + ([AIRNBN_SERVICE_COST] + [Local_annual_Taxes])&#13;&#10;) * &#13;&#10;(&#13;&#10;  (100 + [Occupancy Rate]) / 100&#13;&#10;) / [House_Price]' />
            </column>
            <column caption='AIRBNB_RENT_RATIO' datatype='real' name='[Calculation_2108810552944189453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2108810552914001920]/ [RENT_YROI]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='House Type' datatype='string' name='[HouseType]' role='dimension' type='nominal' />
            <column caption='House Price' datatype='real' name='[House_Price]' role='measure' type='quantitative' />
            <column caption='Local annual Taxes' datatype='real' name='[Local_annual_Taxes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Occupancy Rate]' role='measure' type='quantitative' />
            <column caption='Rent Yroi' datatype='real' name='[RENT_YROI]' role='measure' type='quantitative' />
            <column-instance column='[Occupancy Rate]' derivation='Attribute' name='[attr:Occupancy Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2108810552944189453]' derivation='Avg' name='[avg:Calculation_2108810552944189453:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Occupancy Rate]' derivation='Avg' name='[avg:Occupancy Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[HouseType]' derivation='None' name='[none:HouseType:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[House_Price]' derivation='Sum' name='[sum:House_Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_AD1CBC4940F746B0AA60F77AAE46C6AE]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[City]' member='&quot;Giardini-Naxos&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[HouseType]' member='&quot;1Br_1.5Bt&quot;' />
                <groupfilter function='member' level='[id]' member='39056060' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_AD1CBC4940F746B0AA60F77AAE46C6AE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Inclusioni (City,House Type,Id)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:City:nk]' />
              <groupfilter function='level-members' level='[none:HouseType:nk]' />
              <groupfilter function='level-members' level='[none:id:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Occupancy Rate:qk]' included-values='in-range'>
            <min>0.30291647223518431</min>
            <max>0.51430237984134397</max>
          </filter>
          <filter class='categorical' column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]' direction='DESC' using='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552944189453:qk]' />
          <slices>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,House Type,Id)]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Action (City,Id)]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Occupancy Rate:qk]</column>
            <column>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Inclusioni (City,House Type,Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#f1ce63' />
            <format attr='border-style' scope='cols' value='dashed' />
            <format attr='border-width' scope='cols' value='2' />
            <format attr='width' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' value='118' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552944189453:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552944189453:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='dotted' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]' />
              <shape column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:Occupancy Rate:qk]' />
              <lod column='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:House_Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552944189453:qk]</rows>
        <cols>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</cols>
      </table>
      <simple-id uuid='{18E5FE49-213C-4910-B942-FD24D8C4D67E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='83600' x='800' y='1000'>
              <zone h='98000' id='6' type-v2='layout-basic' w='83600' x='800' y='1000'>
                <zone h='49000' id='3' name='Table_HousePrice_HouseType' w='50529' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='5' name='MapsXOccupancyRate' w='83600' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='9' name='City/Yroi/HousePrice' w='33071' x='51329' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='148' h='98000' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='14800' x='84400' y='1000'>
              <zone h='22125' id='12' name='City/Yroi/HousePrice' pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' type-v2='color' w='14800' x='84400' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='76' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='75' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Table_HousePrice_HouseType' w='50529' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='City/Yroi/HousePrice' w='33071' x='51329' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22125' id='12' name='City/Yroi/HousePrice' pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' type-v2='color' w='14800' x='84400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='MapsXOccupancyRate' w='83600' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A69972AC-46C6-43F7-9CFF-1453FD3D0168}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='827' maxwidth='1169' minheight='827' minwidth='1169' preset-index='16' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Parametri' name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Occupancy_Rate_Vatiation_In_Percentage' datatype='real' name='[Parametro 14]' param-domain-type='range' role='measure' type='quantitative' value='5.'>
          <calculation class='tableau' formula='5.' />
          <range max='5.0' min='-5.0' />
        </column>
        <column caption='Interest Rate' datatype='real' name='[Parametro 7]' param-domain-type='range' role='measure' type='quantitative' value='2.5'>
          <calculation class='tableau' formula='2.5' />
          <range granularity='0.1' max='2.6' min='2.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98066' id='30' param='horz' type-v2='layout-flow' w='98632' x='684' y='967'>
            <zone h='98066' id='28' param='horz' type-v2='layout-flow' w='88452' x='684' y='967'>
              <zone h='98066' id='6' type-v2='layout-basic' w='88452' x='684' y='967'>
                <zone h='49033' id='3' name='House_Recap_Investment' w='88452' x='684' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49033' id='5' name='Top_Per_Airbnb_Or_Rent' w='56031' x='684' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49033' id='35' name='Maps' w='32421' x='56715' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='119' h='98066' id='29' is-fixed='true' param='vert' type-v2='layout-flow' w='10180' x='89136' y='967'>
              <zone h='9552' id='31' mode='slider' param='[Parameters].[Parametro 14]' type-v2='paramctrl' w='10180' x='89136' y='967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9552' id='32' mode='slider' param='[Parameters].[Parametro 7]' type-v2='paramctrl' w='10180' x='89136' y='10519'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='90' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98066' id='89' param='vert' type-v2='layout-flow' w='98632' x='684' y='967'>
                <zone fixed-size='280' h='49033' id='3' is-fixed='true' name='House_Recap_Investment' w='88452' x='684' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9552' id='31' mode='slider' param='[Parameters].[Parametro 14]' type-v2='paramctrl' w='10180' x='89136' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9552' id='32' mode='slider' param='[Parameters].[Parametro 7]' type-v2='paramctrl' w='10180' x='89136' y='10519'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49033' id='5' is-fixed='true' name='Top_Per_Airbnb_Or_Rent' w='56031' x='684' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49033' id='35' is-fixed='true' name='Maps' w='32421' x='56715' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{80CD04B5-8C77-42E7-92D5-D04FBBC0A4F6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='MapsXOccupancyRate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[max:Occupancy Rate:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3BF475A4-8B92-4C9D-9A4E-E035C57FC413}' />
    </window>
    <window class='worksheet' name='Table_HousePrice_HouseType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E4ABD0B3-F67D-48CA-A56C-AED3C2DFB116}' />
    </window>
    <window class='worksheet' name='City/Yroi/HousePrice'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{629E514E-E262-4850-B161-CA625BC11331}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='City/Yroi/HousePrice'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MapsXOccupancyRate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Table_HousePrice_HouseType' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{803D27E9-FED6-4268-9231-794C858BB6EE}' />
    </window>
    <window class='worksheet' name='House_Recap_Investment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Inclusioni (City,House Type,Id)]' type='filter' />
            <card mode='slider' param='[Parameters].[Parametro 7]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parametro 14]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940814343:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:AVG_price_per_night:qk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940814343:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7753A8C-6A1C-4113-B4C2-1D8A80A7FFA9}' />
    </window>
    <window class='worksheet' name='Top_Per_Airbnb_Or_Rent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parametro 14]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30AD4A0A-EC23-4B3F-AADD-B2CCF7EFCE14}' />
    </window>
    <window class='worksheet' name='Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[max:Occupancy Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552944189453:qk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBCD3217-FC01-405D-B204-6A402756B729}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='House_Recap_Investment'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[:Measure Names]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</field>
                      <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]</field>
                      <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</field>
                      <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:AVG_price_per_night:ok]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</field>
                    <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</field>
                    <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]</field>
                    <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552940814343:qk]</field>
                    <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:AVG_price_per_night:ok]</field>
                    <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[attr:City:nk]</field>
                    <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[:Measure Names]</field>
                    <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Giardini-Naxos&quot;</value>
                  <value>&quot;1Br_1.5Bt&quot;</value>
                  <value>39056060</value>
                  <value>886089.125</value>
                  <value>196</value>
                  <value>&quot;Giardini-Naxos&quot;</value>
                  <value>&quot;[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[usr:Calculation_2108810552941252617:qk:1]&quot;</value>
                  <value>74360.625</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Maps'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top_Per_Airbnb_Or_Rent' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{702F7102-F929-40E2-909C-09B600DEA245}' />
    </window>
    <window class='worksheet' name='Top 10 cities based on  ADJ_AIRBNB_YROI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E7259EC-D253-4C2F-B070-279DAF7B9865}' />
    </window>
    <window class='worksheet' name='Top 10 cities based on RENT_YROI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6DE610B-E0F6-4E4D-989B-2257FE325457}' />
    </window>
    <window class='worksheet' name='Top 5 types of house based on  ADJ_AIRBNB_YRO'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BC0F38A-0CAA-4686-8E68-BED990E4CE8F}' />
    </window>
    <window class='worksheet' name='Top 5 types of house based on  RENT_YROI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{531EE7D8-4561-4B2E-BF5D-1D5E2FCE55D3}' />
    </window>
    <window class='worksheet' name='Adj/Occupancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Calculation_2108810552914001920:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[sum:Calculation_2108810552914001920:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E2BA4A6-3AAE-41E2-BAA0-3B3A3F932105}' />
    </window>
    <window class='worksheet' name='House Type and Rent Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='0' param='[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Occupancy Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[avg:Occupancy Rate:qk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:City:nk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:HouseType:nk]</field>
            <field>[federated.1ostkzy1y5fucf10xmzwu1h3lq1r].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{351EA873-F097-45C0-86C8-A7DA9F13C3E0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Adj/Occupancy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29Z3xc133n/b3TZzCDGfRC9EYQ7CAJFrBLpCSqWbLobid27Cd2bK2fxPvY
      fuwkm302z3o38SfJblziSLYky7YUq5IiRbETBAGCJAiC6B0g6qAMML3PvfuCYjEbAIogYc39
      vsOZwbnn3Lm/e/7nnt/5X0GSJAkZmShF8aAbICPzIJEFIBPVyAKQiWpkAcxj3G43wWDwQTfj
      Y40sgHlMIBAgHA4/6GZ8rJEFIBPVyAKQiWpkAchENbIAZKIaWQAyUY0sAJmoRhaATFQjC0Am
      qpEFIBPVqG4smJqawu12P4i2yNyAz+dDpVKhVqsfdFM+tgjyfoD5i81mQ/X776P3jD7opnxs
      kUMgmahGFoBMVHPTHOBG/K5Jxu0eABQaA6lJ8SgVwjT/FcE2asOYkIBWpbwX7ZwzJDGM0+XF
      aDKhVAiIQS8T9stzIKVahznWiEo5s/tEJOTH5YtgiY0BIOB14nT7kQQBlUaPJdbItKdO5r4y
      7S9b/+7P+O8v/p6amhpqm7oIhmcyZXDyTz/8O1rGXPegiXNHJOik+vB+Xn1jD1PeCACe3rPs
      O3mBlpZmzlQc5nTr0Izq8tmHOL7vLV7aU3m1rKP+JDVn62lpbqLq8H4aBp1IuGmp68A/Jz2S
      mS3TjgCgpnDNVnY/sQoA0e+k6tBROgbtWLKW8cTDpVw8foikFRvJNqtoqDpBTMnDPP7pJ0g1
      6YgEXJyrOETLcIC0rBzK1q1mrKESp8rEQFsL+pw1PLKhBGt7DRVn2wirYtmy6wmyleMcOtdN
      rNJHx6Cd9TueoiguxIlDh+kZd5Gcu5KdW1ag+Qh3VL99iuy1jxKIvH+1TFCqWbhiNeUFRsLj
      HbxzcZxwYSJD45NofKOMiKksX5jOjeOa1xNiRflWpmo7rxVqzaxaW0p6UgyBkfMc6BglZryT
      w0d6yLL2UbxsFYsyEu6+AzIfmRmM7WF6LlSzd+9ejtY04vH6ic1czFNP7WSi8lccaffj7q/l
      aN0gAccYb759HI1JQeX77zLi8nBmz4ucGDbyzNOPcuqNlxj1Bmmq2ENFh5stj+zk2G9+zog3
      SEjSsenRp1iX6eWnv9xPxD7A79/aj5C+jLJ4Oy/sOQV+D6a8VTz9+HYGT71GRcvUR+p8THI2
      GRbtH5RJYoiuprOcqqzgYE0XS0vyiAR8XKg6ROuEmqLspFuetIQFOSTG3PC4MujiYt1ZKiuO
      cejcKGtW5ZJdsoy8jELWb9lIfqrlI7Vf5qMzgxFAQcKCHEpKFqE2mFFIXhpOHOCQP8zI0Dh6
      u5dHV63m5JGLDKfGEslYxYKrt2UHF5tGWfe5rxAXZ0YjRJAAVHry8nNJiEtEJ/kJigEm+9up
      eP8YUniMKUchkpSGMS6N7Mx0lOMx+LqCBCIhGo++xYmwkoGhcRJdHiDu3p4RQUli6gJyM3TY
      rb2MDE+QXRSPxpLJprVLUc/msYFSS/qCLBLMSiYGOxnonyS9RIdGrcEQY0Bzb1sucxfM4OdU
      YE5Op6CggOz0JAZbKuiTiviLv/hzHlqRA0BC4TLi3F0cO1ZPSdmq6ypVY9AJ2F0uxLCfwO12
      9wWGOXSinZ2f/3P+9HOPEHubr/XVHmTIWMo3vvHnbFmaMauOzhRBUGBJTGNBRgaFhZm4xyYI
      IWAwxc7u4gdQakhKSWVBRjaFCzOZGBhGRECSwkQiEvISzINn2hFApdGhU1+LeJOzigm/v4cX
      XhlBGA+QohQQtKmsKFDwynEP3/vTHAB0hhiUQizbH9nCz9/+N0aaljAZAAFQ6wwIqstXkz4m
      BqU2iYUZCt55+UXycjSoDCZQqDDodSgEUKg0GLRqUguX4j28l1/+ZpCQLUiB6qM8xY0w0HSW
      mtZBRgYvMex4m4Wrt1JMhPrK9xi+oCIiQv7KTWgFAZXqzqeqpfoAzZcm6LPaecMzzrJNT6IM
      Ojj2wV60OhViWGDF9kdRoCU5wcMHb+5h8fqNLMtK/Ah9kPmozPlK8HB3G9rUPIzBAb7/X1/i
      +//tb0kx/fEO/kHHCCera3EHIlfLknNXULY8Zybx5KyQV4Lnnnv9m92EEHGy59f/hiuk5Qvf
      /iuSjH/cvhZ1bApbHn6E628bCoXypqdCMn8cyF6geYw8Asw9shVCJqqR7dDzGJ/PhyJvA6qw
      90E35WOLHALNY2w2G0L7/49OmnjQTfnYIodAMlGNLACZqGZaATS9/2t+V9l6P9oCwHDN2/x0
      zznE+3Q8KRJgeGSUUORyJBj2TNLZ2UlnZye9A1YC4Zm3JOR3MTRqu/q3Z8pK14d1XRoaJyIH
      m/OOaQXgto1gdVybhIX9HqzDQwwODePwBoAIk+PjTNnGGRoaxunxMGEdZnhskrAo4XHYsE3a
      GB4cxOb0IkmXffNjI0MMDY/i//ACC3gcDA8NMtjfx+C4k0jQy8SkkwgQ9DiYdPmQxBATo8MM
      Dg1j9/iRJBGHbZTBwUGs41OExWtXmBQJMm4dZmh4FO9tPBghzwQVhw6y94MjOHyXF7Z8Q42c
      77bh8bgZaqvlVMOlGZ1I91gvxw/s482jtVfLetrrGRyZxON201tfQW33JBJOLlQ1Ik9r5wez
      XggbbK3hRKMVITBK02Qq//N7u/iXv/4umZseQxhrpNW7gIeWJXP8YBWf/Zu/Zeg/fsQZqYTS
      ZImqxkm+84NvMnDsdaqHIUEcx52+ja89ks2rP/s5HksBMWPDkLIcd2cl//PNQX7wX/4M69FX
      ed25nK8vcfLzfR0syk0gYCrgi7sWcXTPHkIxRtoutLD1K8+zpSgFgMYjr3GkWyRO4cBuXMy3
      v7DjJrWHAyFKNj6KWLn/apmgUJFZsITl+TEER3W812In7PfSM2RF4x1hhEzKlmbdtPAVEbSU
      bdqC42zHtUJ1DEX5S0hLNOBLDHG4b5LW8UaOnOilZbibJWXlLM9Omu1PIHMPmbUAUvMWkdY7
      Rr9bxWDTeabYBYYENm17lPiQhYH/8LDrqWfwt9Zj8wdBqaV4+Sae3VSI9A/Pc6q2nvqD54hf
      upqAWsWZY0fZmlBAr2oxf/u13Qwf8tDdf+tjB1yTOIIK8ldsYcWiLBSCxNJl+ZxuvIQQnKCx
      a/RDAfh56+0DWJZuJSKGaTlRycgXdrDghvr08WnobygTI0Eazh7G3qrEH1axatNmIkE/DaeP
      kLx4O+uXZ95y1declA6esT8s9E9RdeIwei0EJD1bHllDos7CwKCF9bu33db0J3P/mLUA9r38
      U4JLdvPsunX0df1yVv8biQiohQii3syWR5+hKF7JZz6vYbTubQSVcdrGZG34NN9Lb+PEwdd5
      Z186/89ns/hfb7Xwve98kUsxLpqvfjNMMGJk066nKEyI4dN/osYwwzYKSjULV5azNkfHWF8j
      7W39pCxLxbRgERtXFMxuS6PWTOnaElIsKoY6z9PUMszmUu30/ydz35jBU6AII10tnD59mtbe
      UdQaNVOj/TTUn2Vgcgav74kE6Wmt5+QHb3Del8valUvZUGji0PsHaG5uovJsA8m5y9CNX+C9
      w5XUtV6OufVxiSi9A9ScrKK25fKQ0FdfyYXuSdKzctEEvQSVWhRhFz1tDVxo6uWaPc3Ijk25
      7N97mIbGRs6cOo9zhidEQECrMxBjNJGalkTA6SKCgFarnf1+XkGBXm8gxmQmbUEybpsNCQWS
      FCQcEhHlJZgHzrQLYfbhLlovjQNgSc0jwyLS2TWAPi4NZSRAzsJs+tt6SMvJRy3Z6bdGKMhN
      YbS3C1VqFtUv/A2tsRvYXJxOZlEJ6XExhP0OOto6cAUhNbuQrBQzkwOd9FhdxFliwJBEwYJY
      +ttaGPMpSDbrCOkTyTJLtHd04wkKpOYUkp1koLe1EVtQS2qCHvRJZCaZABCDbtpb23D4JRLS
      c8jPvHEn1zU79OTEGKa4JApXbWWRsofXKvuwGJSg1LJoVTlFCWoudl1izYqltz1PLdUHaO6f
      ZHTKQ0piHMs2PYkweJLz7ZOoNEoUSgOrt20nK05Na/VRmgb9FK8rv6MdWl4Im3vmfCX4gxf+
      HueSz/Gp9XlzeZj7RtA+xNGTZ/7ADp2Sv4oNpXlzYoeWBTC3yFaIeYwsgLlHXgmWiWpkAchE
      NdOGre6JEdyqWFItl7OduSeHsYeNZCTLT7HvB5JOgyTnj5gzphVA04FfUx33MH/1YWKszuo3
      OTi1iu9/sXzOGycDl7MCyBsu54rZrwQvXMOqiUR8zh72HeklXTVC3QjsevYT5CVo6Tx3lA9O
      t5NftpMd64oJ2XrYs+cAEyEDjzzzGfJiXBx8fz/dI27Slm3hue3L5ThM5oEx62vPNnCR0xcH
      CHgH2fv7g2Rv/iRrU0Z462Az/bV7+MVhK1/71teZOvki757tp+LtV5GKHuEbX3wMn22CQAhK
      Nj7ON772OYb3/5Rq61x0S0ZmZnykR9eGlCwyLHrGNRrEcISeplaKyp5Fr9KysnQhbzV38aXS
      Vbx64Pe82FPA9h2PEfb2sO+3BwlrBHrGJih+gLsvwz4HnZ09uIMREtJyyU5PQHSOUN8xCIA2
      JoGCgmwMmulDEDHko7+3mwlnkKSsfLKTzditPXQN2JAQ0JtTKC7MRCVnh55X3NPoIzkthdGB
      QcJihKHBEVLSkojNLuOb3/pzNqc7+ffXj9B4tgIxZzN/8fUvU5r7IJ2QEnbrAF6FgcR4M111
      VXRbHfjHOhkOxJCUlIg01UXFhe4Z1dbXXMuQSyLeYqD++DEmwjDQ3wNqE0mJ8fgHz1PdMoaE
      ndNHa/HMce9kZsa0I4DOaKCnci//3HmSnBUPU6Q3E2/Wo1CqSEowA6AxmLGYdBRseori377O
      //qXJhT6Ij69KZ+h84c5Xt9LyOuibOMWClOSqHjtCK/4OgmqzRgeWJoggcTcJSQiEQkFcFn7
      CYYiCIKSxNQssrMNuBUuenr9hLxu2vouoXKPMqUvYO0t7NBZi9eRq1ZDJMBEaxvuMB/mBs0k
      LUGHOTJC9YSX1tNVnKrppWdyULZDzwOieiVYioS5ULmf1iE3aYWlbFhVTLDzOC9VWkmLVSBo
      LazdvIkUlZ8977xJztpdlBZloLqlK04iEvTQeLaaMXUWO9YW03TqHS70+NBpFShjktn28Fbi
      dJMceqNxRnZom80GAz9Gp5ici+7LcB8yw81nBKWK0q1PU+KaoOZUNR2DyeSptKze9hTleXqs
      XbXUXuxi26pM4vOWUVacedu6Qu4JKk/WEF+8lp15yZcL9Yk8/FgpqXEq+lurqK3v5+F1xvvU
      O5mZEMVPICNMDA/h9IfQxlhIteiwO6+LzBUKjLEmwr4AEgIq5Z0nwm31taQu28zy3OSbPhOU
      amLNsQQ9biQUiKKPYDCCKN6vnc8ytyOKRwABAnYqDtbgD0nEpeSzpjAdxZiNrsr9DF9QoNTF
      sqJsPVqVQJzFfIe6gjjtdvqrDtGsANCx6cknMaoiVB7dh0KpQGNIYN3WZShQsrDISMXefRSV
      bWRplvyGmAdJVM8B7ob7bYeW5wBziyyAeYwsgLkniucAMjKyAGSiHDk79DzG5/MR6V+IMiin
      0ZorbhJAXFwccXH3+M2LMneFzWbDXV2JxiY7BucKOQSSiWpkAchENdM+uq559b/xk7MeSnPj
      mZgU+cLz/4mSlJnlWWs6fQJj4WpyEm+1/O/j3R//AO/mv2GrsoqfHLXz19/94rQZ3P71+T8l
      6xt/z9Ml9+Y9wWLQRUNrPwsXLUKvURCw9XGyrhMAvTmN5cuLMWln9oTf7xilddDDysWXU8CM
      X2qioWMEEQFjYharVxShlu3Q84oZ/LIaSh/ZxV8+vpKq137EgZOtZG5JoL65E19ERfHKtWTG
      Rmhq7kKrVTMwOEr20jVYQkP8x8svEltmpbxsHRuWZtJ54Qx9E34yF61gYcaNWTkBJJzWHmob
      u9Em5rB6aQF+axcDoVhM3n78cYvY/pkvoU0xE3SNUVfXhCMgkl1cSlFm/Kwzt/lsfRyvbmbM
      6SQjfyF6jYLg5CAklbAmx8BU30WOne3g6U0l09Y10dfA2Qvt9IXirgrAOj5ORt5ikuN1jLVV
      c6LeyMMrdVTsa2PVExswza65MnPAzEMgKYLT6UVv0DE1NoIQk0iCYoT//Ys38bpG+M2/v0DD
      cAiz2MdPX/kApd6CKUZHfHIaKfExDJ15m3dqJ0i0KNj325fpmgjddAj/1CVe+fUedElpDFT/
      nvfODTBYe4AXX/8P3nj3CFa7n4uH99E86sA/ZcWljCXNEuaXv/gVY84ZpGm8AZUhgS07HyUr
      Tne1TBAEDEYz5thYTDFGBEEi6HFSe+Ec5ysOUNXQf10KxmsYk3LZvm0TScbr7imCClOsGXOs
      iVhTDKIk0nq6gnMXa9j7xrtc/DDjnsyDYwYjQJC6g2/wz50nQL2Q3RvzUVkv0nquElfAwfCA
      RChchs4Uz5LlK8n2TuI93o3BkkaixcSC3ALy00y89dvj9DvzOeEWGJkYZ3LKddORJgfqONvQ
      TVgt4LVNoRu0skgtEpQS+ep//hYWrZLfXfmyRstocwVN3iCDI/14/UEwzy57glpv4sbtCGI4
      QG3lXobOK1HqLaxaX44UCdDdeJHFW55iRVbSLbND62JM4PH9YaFvgiMH9qDTKtEYkyjflkai
      YZOcHXoeMeMQ6EpWCLDzwr+8S/Ynv8NDRSF++IMXbv+vAogSSIBKpWLFjs/ylc1pIIlAgL03
      fF2hUmHMWMHz3/4qSkFCFKHtvRpScvOwaK+/7EJUvfsaocLP8e1t+fzjf/3erDp9JxRX7ND5
      BiYuXaSmoZPENdkk5i1hSfbNTs878qEdOi1ew3D3Werqetmx0XLP2irz0bkL/5ae9HQjp957
      jfFMLaOB23+zdOUiXnv7twSmHuOhZz/Pf/mnf+CnrUvQG2LZtnPrTd9PzNlIecKP+Lt//Bm5
      iTrSl2wh65Y1K0nLSufI8bf5rTWLrrGbw6mPjCCgVikIBoMICCgVH+GBmUKBWikQDAUBJaLo
      we+PYNQIKD5KvTIfmWnNcOGAj7CgRqe5ppVIyI/XF0Sp0YIootNpCPgDaHQGFFIIbyCCQa9D
      EkN4vT5QaTHqNfi9HoJhEaVKg16vJRzwIal0qAnjD0no9RrEUBCPL3A1tbhCDBKUlOi1l4OV
      gM+LoNGhIoLH40Oh1qKQImh0epSzmgVfyw4dDgVRqjTkrtzCkphx3q1sRqUQ0JiSKVtXRqJW
      pHtolOKC2yf4bak+QPOgi2A4gkatYtmmJ4mZqqOmcRBJocBgXsDGLWXEahQMt9VyrmWE/DXl
      LM28vR3aZrPh/sfvygthc4jsBp0l99sOLQtgboniDTF3h8aygMeeevZBN0PmHiEHoDJRjSwA
      mahGDoHmOXH5SvSpcnLcuUIWwDxHEECY9dv5ZGaKHALJRDWyAGSimqgOgQIuK9WVZ5jwRsha
      tIZVJZmER9t5r7IBgJiEbDasX4lFP30C00jARf3ZavrGfOSuWE9pfgojHec4fbGPiKDAnFrA
      1vLlaORoZl4RxSOAhMfhpmjDDj757ONIQ3U09U0Qdk+QvvIxdu9+jrUZEQ6fbp1Rbb0tDRhy
      VvOJp3ZgO3eMgQBMuPys27qL5z75CRYbRzh0ph+JCQ6+cXzGL+6WmVuieAQQiM8oACT8Lhth
      pR6jQQsfmlQlMUIgJGEwaAi47NQ2NSA6JlGkl7Ju2c3ZofOWr0dQKBBDblQaA+rrbi1iOEww
      LGCI0dB6upKGjl4m3nDI2aHnAVEsgCvZod+nbcRLam4JaXExRKYu26GH61SoDBaWr1kCUojB
      zm5WP/osuUmxtxw2FQoB90Q/5843Y162lhQ1jF+xQ+tU6ExJlG1MJMUk26HnE1EtgMvZoZ9i
      qd9N07lqWi8lU3ydHdox0kplQyfJa3NJyltEfvLt84N6xvo4fbGPotKNZCd9uNfrih06QcvE
      YD3nz3exY2vifeqdzEyI4jlAiP72VkbsbkQUSKEgwXAEkIiEQwRDYQI+L0ERBKazLUu0NTWS
      tXgVaWYtwWAIUbpcHg6FCIXCBFxuIkoFAipE0YXL6ScUvtXeMpn7SRSPACoSE4ycPnMCt18i
      vWApaxYuIDLhZbK6gvfbQGdJY+vG5WhVEbIy0u9QVxi1Wkfr2WO0AoKgY/0jj5JkNnLu7Aku
      CAIxCdlsLy9CAaxZl8e5k8fJXrmWkgXx96m/MrdCtkPPkvtth9a88/+i947e45plrhDFI8Dd
      IduhP15E8RxARkYeAeY94aBEyC+/SmmukAUwz6l93U2kT143nivkEEgmqpEFIBPVyAKQiWqi
      eA4g4bUNcKq6DkcgTErOUspWFCJam3mnshWNSkBrSmHN+jWkmW+VyPcPsV1q5szFDrwhgczi
      UtYszmKw+RRnmoZBqcBgyWDT5jWYNBDwhdHotfLdZx4Q1b9BOCywYuujPPfs0xicnbT02xD9
      TnLW7GL37ufYXKTn1PmOGdUlqYysf/hxnnnqYVwNp+j3g8MvUb79cZ775LOsTvNQUTsATFGx
      rxr5JVTzgygeAQRiUzKJRcI7NYIzqCYv1gD2y59KkTBTdg8mk4WAc4qqurOEJqeIKdjA+lvY
      oRMXZCOJERzjY3g1CcRfc1YjhgJMTfkwJxplO/Q8I4oFcM0O3W71k5JdSIJRhzhxzQ6tMcZR
      sjIZCDM+MMrmT3yKVKOWW27q8k1yoqKSUWeYtLylxAhczQ6t16vQxyZRujSWtGLZDj2fiGoB
      XLFDLw/66ag/TXOvlSXqK3boGLy2Lo6d7yB1fT5JeQtJM+luX5k+nm2PPEUo4KHhxPu0jhde
      Z4fW4Rhv4XRtBykPpd6/DspMSxQLIERfcwtBYyIWnYIpuxt1vApJEnE5Jhgb9+IcGUHUWFAi
      oBDutJk3QGt9M7qEVAzKCDZniFythF8MMTVpQyVpsF0aQWUqRECDQnAwPDAKiRZi9dr71mOZ
      m4liAahIXZBKY2sHw0GJpPzVLMxNQbQH0A310NICGmMiW9ctRKsUKczLBkCSRMLhMNd7aBUK
      FakpcbT3dBGIKMktf4zCWAW21HSau3sYtwoYzDlsXpZ72Q5dvoTmri602qWyAB4wsh16lgQd
      I5ysrv0DO3Ry7grKlufMiR267plvEekbvsc1y1whikeAu0NjTuPhx5580M2QuUdE9TqAjIw8
      AsxzDAkKRJ+cHHeukAUwz1n6ORP6gPdBN+NjixwCyUQ1sgBkopppQiCRwcZTvHmwBlGpRpdU
      xBefewSTbqaRU5ADL/4rweXP8fSabAiN8OP/8Rue+ewn2Pv6r9jyZz9ioeoS/W4dC3NT7qhG
      qfc433/Pzt998xn09zAklsI++gbHWZCRgUalIOQco7nn8mNHTUwcuTkZ6NUzO2DQa2dwwk9e
      1uXVXudYP33Dk4gI6GKTKMhNRyUnx51XTDMCODn0zn5yt32Rv/z28zzzUClalYDLNkx7awut
      7d24gyIRv4uB/iFGhvpobe3A4b/yjFxDTk4stXXtALh6mhgljri0FDZsfoiUGB91B17j57/Z
      R1NnL95ghKB7kvbWFjovjRCKXLcXNuRhbNL1YcKpywtSzvEhWlpaGBizE7mL5Yyg08rRQ0c4
      XFGJ88N9t/7RNnrsCmJiDPhGWjlZ3zujuhwjnRw/eJD9VQ1Xyy71tuMNKTEYdNi7z1DTPoGE
      nbMnLuCZdWtl5oJpBKAlMU5L/bkaRibdJCanolGFaa87R2t3H7UHfs2v9l/A2X+BH/3on6lp
      6+bcvpd55XAzVy7d9OLVBHou4hKhteEC2cvXEqf0cvrgXvqmgthsTrxOG8PWMdz2UX73i59y
      uqWHY2+8wDtVXdxuO7hzpJGf/OsrdPX18Luf/yt1/fZZd16SlKzc8igFSYarZYKgJCUjj4KC
      AorzFuDxeAj53DS3tdFx/gSnG/u5VT43hdbMhi2bSTVrrhWqdGTl5FFYUMCi/BTsky5aTx+n
      ouo4777xLhcvjc+6zTL3lmliGT2PffUvSag4wqv/8t8RC7by/GcfISsvg4bDVdidLjoaWwkt
      ysKUkMOmhx7CSw8/6x5D5LK6YhMzyNGO0TQapqlxhFX/VxYCPgAEhZnlKwo4r09n26a1TDbv
      pcFXwD998gkC3SZ++JtjbF9fROIt0vO3VRxEv/pRntpVSo7iEvsrmlnzpY2z6rzWnMSNRgQx
      fNkNOnRegaC1sHbzZsSQj+YzJ8hc/RhrFmXeZIUGMMUng2fsDwuvJMfVKlAaktm+M4c4rUl2
      g84j7jwCSBJKrYXyR3fzvb//H+jOvsn5njr+7YX3WPmJP+PbX/8kpmkOIOgS2FiayYVzh+n2
      p7Ew3jijhkmSxEyjGkkUuVd+DsWHyXE/tXs35cVmGi52EUEgPm856xdno5rN+7r0iTz82NM8
      98lnWJkpUlvff9sRTebBcOcRIDTJe6+/g8eYQpzSyVjiCgrjE2kwhLhQdYI+VxM+FkxzCAU5
      q9bwyl//M6Ytz2PSKyFw7dOUvEUEDx3h4HEL6xevZpn+l7z81j78vXWs3f4Z4q+7+zuGOzh6
      +CCWuFQKNj6C74X97FUN03LWzo4vL777s3DLZiswx1sI9ziJIKBS3v3MW1CqiUuMJ9DmQsKE
      KPoJBUVEFdMk3ZWZa+5shpNEPPYJhkZthCUFiWmZJJl1OMeHGJ70kpAUTyCgIDVOg9XmJTUj
      BdE5zphfQ0ay+erGETEcoL+7C31qASlmLYghrMPDGJOzMaojWPt7sYdUZGVloQra6R2wojDE
      kZORglp5+QKR/HZauocAUOvNZGenE5gcYXDcgSkhnfRkM8o7WpZvJMJA01lqWgdxOabQmywU
      lG6lRNPP7yu7MWoVKDRGlq5ZT45ZSXPvICuXLLptbS3VB2gesDPl8hFnNrFs05OorNXUto6j
      UClQay2UbdtMmklFV+1JLvY5WVhWztKs26dLt9lsqI/9EH1Azg06V8hu0Flyv3AmGlcAABEm
      SURBVJPjygKYW2QrxCyRk+N+vJADUJmoRhaATFQzfQgkSbgnh2jrGkQwJLCoOA/DDK0BMh+d
      SLyGcETeNjlXTCuAqYELvPjKQUo2bUZj7WIkewH5asN0/yZzj5BUAsiPSueMaQQQ4syBfcSt
      e47Ht5Z8WBah48wHHKlpJ6gw8OinPk8Og7x9sA6NzsvwhMATn/k8uRaBtrNHOXa2nZiMZTz3
      xGZiNMpb59SRkXlATHNrcdAz6KEgO/O6MpGY5IV88evf5LNrY/j3Vw/itls5U99F6aOf5cll
      Sn76q31Ym47w0uF+dn/5qywM1PKzPRe4Z8u1MjL3iGlGAA06rYA/EIArpodwgIbKvZwbDGCU
      xglEliNKCegMFmJj9RhXLMX7u6N0dYikFD5EkikGzapFvPKbFqTnVs+rESDknaSpsRWHP0JK
      djFF2clEpvqpbugBQBebwpLFhRi100+VxKCXrrZmRuwB0vNLKFwQj22gjeZuK6IgEBOfwYol
      +ajn0wmQmW4EMLFmVT5Vx47iDIq4J8Zw2vo40+bh03/xPJ9+rIwrTgUxEiYcDjFUd5GYggIy
      MvOYGurA6fPT39ZHal72vLr4QcI5NoomMYtFxflYm2toH5oiYLuE35hDSUkJ8eIIx2s7Z1Rb
      b3MdDkUcCwuyaD91jNEQDFuHSUjLo2TRQgyOFk42WJGY5OSBGjk57jxhmlubQPG23ewM7OWF
      n/5vNNoUnv7cDjaUxPL2r37FkoJ4stITUADOsXZe/flPkIIGvvalHeSYRbYPv80vf/YzFMZU
      vvrptcwvBQgk5CwiAYmQ30NsrAEBEAQFJksiSUl61C4LrcMRgh4XTV2dKFzjeGMXsfYWyXGz
      l64jT6VCiviI16kJioBCTVx8AonxGoiPZcAbovX0ac7U9TLgtsrJcecB047tap2FTZ/4Epuu
      K8v6wrfYed3frs6TWNIW8+Xnv8X1zpbtz/wJ2+9ZU+89l5Pj7qd1yENawXJKUi2Euq7YoZUo
      dRZWlZcjRQJ01Z+naNOTrM1JuaUdWqVSEvRMUn/uHKGsJWRowX7VDq1EbUxi0/YFJOj1sh16
      HnFPrBDaxDwef9REzL2o7D5yOTnu0yz2TFJbfZr2gRQKVFeS4+oZ763nzMUuktZkkZC3hBV5
      t09sG3KOUnHqPOlL1lGWlXC58Epy3Hg1Q51nOF/Xy45y833qncxMuCcPmDVxGWzeuJLp36My
      nwhjvdTHlDeIRh+LxaDE5fFd+1hQoNWpCQWDSAgop7FDN104T86qrSy+cvFfj0KFTqshGAgA
      SkTRS8AfQRTl3QEPmig2wynQKYNUHdmHNyiRlFnMmqJ0hDE7fZXvM3xBQB2TwJq1a9GqJZIT
      4+9QV5Cgz09dxfvUCwA6Nj35JGadQNWx/aBUoDelsnFLEQIKlixJ4NT+/RSsKWfprQQjc9+Q
      7dCz5H7boYWm/w+9KO8dnitkAcxjZAHMPbLJRCaqkQUgE9XcFLZOTU3hdsvrlPMBn88H9uUo
      Q3IarbniJgHExcURFxf3INoicwM2m41IWxU6h7wneK6QQyCZqOaOT+4kMYzX4yV8JSEnAvoY
      IxrVvdVN0O9BVOjQaeSdZjL3lzsKIOye4NgHB2mrq6bOlcRDpcVsfPIZipPvrenh4M++Q3fx
      d/i/dxXe03pnghhwcO5iD0tXLMOgUeIf6+SD6mYAYuIzKStbhll3i9yMt8A7NcTFXjfrSxfe
      cJAgbeeraRu6nL80a2k5yxfoOHf6JFZHCIVaT8mq9eSnxs4vv2AUcEcBqGNTefJTf0KJyYvd
      WsxXvrwNhRig4/wpmvqsqExpbN9ejlEZoa/pLBc6raQUlbJ+STZjPXWMRFLR23vxxWXjGWjH
      YBDoswZZvKwIa3sTLn0Wj2xZwYqdXyDTkIjX0U9tow0zY3RPqdi4bSMWwUVtVQ1DjgAZJasp
      W5SFcjbpCe+Ad6yLIzUd2D1O8kuWYtBA2DlKfPEW1uUZmOyu5UhNG5/cunTausa66jjX2MtA
      2HyTAMSAhw6bxK5duwBQKFWI7jHcmlR27VqKGLBz+NARjDufJtR5mJG4TZTl/rE5q/44mX0s
      E/bhiuhZtqoUseMAr53opv/8fl491ErR4iKa3/sFB5sn6as/zG9/+yYHqxpwuxy89dILOE1Z
      mHzNvPxmNem5uVx892WaHdB9/gDVbRO4Jlp46cW3UacXIwwe5d2TvQQCbtTmbMrWLGLfv/2E
      Lqdv+jbOEK1lATsfe5QM8/WbzgWUKjVqlRJQotWqCLodnD5bRfXhvVQ13Do7dFzmInY8tJGE
      mJvvKcGAH79jjJaWVvpGbFc3xikUKjQaNZIEGp0W71Q3p6obqDm6h73HawmGZa/QXDPr1XsR
      Bc6hJk6emsQzNIJomaCl6xzpq/6ExQvz0Zdm8tLZRh4zgyo2iz/9+hNoQw7e1l7OKOFyLCA+
      mEZBXjZpZi2BG64mU1oeJXnZOBKN9Hn8CEEFLfXHqfJGGB2ewBYK36u+o9Tob7I2X8kOPXxe
      idIQx4q1i5HEIP1t7azc8Qz5qZZb2qHVWj2EXbc8jjrGwrrVpQQiIqNtNYw4VrMuW81ox1ne
      GOxAQklW8QoyM3JRrVvCcPxm1uUZLz8Fume9lbkVsxaAo6+BQ81u/vN3vom76iVesYIh1oDX
      4SISiTBpd2E2x6IAEtOziNWpCITuvoGtlfuxJaznP31lJS+N/vDuK5ohiqt2aAP2oWZOXewk
      eW0OiXklFKXd3eNhhUpHZl4hggAFqWreqRwilJ1DSlEZ29cvJ+RzUHWyitGM9HvcG5npmHUI
      ZEhIw+zu5IV/f4lD5y9vF1y5YzeK1j38w49/zJ5ODbsfWnbPJnPJWTlcqn6XF15+na7R+7hA
      JwhIkSCBcAQBAeVHSE3inejhTEM3YVGkv6MTpTmO66fVCgF8fj+SJKBSKHC63EQiEWSb1twT
      xWa4a9mhr5CzYgtLTVO8V3n5NUc6ywI2bFiNWRmmzzpBQU7WbWtrqT5A89A1gS7b9CSxzlZc
      pjwKUwxcaq7lfPsQloxiNqwqQRNxU3PyGMOOEAqljuI15ZRkxhPxOzhTUYFdn0npwgyUL39f
      XgibQ6JYAHfH/bZDR178riyAOSSKN8TcHXJ26I8XshVCJqqRR4D5joQ8GZ5DZAHMc/wOECcf
      dCs+vsghkExUIwtAJqqRBSAT1UT1HECSRPzOMU5f6KZs3TqMOiW+4WberWxGpRDQm9MoW7+a
      ZJNu+rrECFPWHs73etlRvhyAwdZqahoHkRQKjAnZbN64CoMawsEIKo1atj7PA6J6BPCMdHD0
      dAujY0P4w5eftES8drJW7WL37ucoz9NQca59RnVZO+s4d6GdPuvE1bIpb4QN2x6//Kb4JDvH
      ageASY7tOcWtbXMy95uoFkBMaiG7dm4jxXjzhhdJDONy+zEa9QRcU5w4eYSje97g1G3s0CmF
      pezYUoZFf7NXVAwHcbpCmMwGWk9X0tBxgffeeJeLl+R8Pw+aqA6BBMXNr2y6aoeuU6GOiWPJ
      qhSQwoxeGqL8yd2km/W3vGsoFMqb079/mB1ar1Ohj01i1WILqSWb5OzQ84ioFsCtuN4O7R7v
      5ER9Bynr8knKKybDMsuXA17JDp2gw25toqa2k53bk+em4TJ3RRSHQBJBnwe73Y7P78fpsOMN
      hJAkCa/bgd3hYGJ8gohSjRIBhXDnKavf48TucBHw+7Db7fhDIkhhXE4HdoedCes4Cr0WAQ0C
      Dsask3j8wfvUV5nbEcVuUJHRrkYaeseulqQvXEVBjJOTdZf3OWhNySxfXkKMIsKIbYrM9LTb
      1tZz8RTdY9e2axaWbibG3UlDxwgiAoa4dFaVlqBTwORQOw3tVjJKVlCQevv3BdhsNjw//i6a
      Ses96K/MrYhiAdwd99sOLQtgbpHnALNEtkN/vIjiOYCMjDwCzHvEiEQkLEepc4UsgHmO2xZB
      YZWTo8wVcggkE9XIApCJamQByEQ1UT0HkMQwkyO9VF3sY+u27cTqlXj7L/BGZQcGjQK1IZ6V
      a9eSnWicti73RD/n6xoYdwRJyClh05piBi6e4GzrKAqlEq0pifIt5cTrwe3wYzAbb5liUeb+
      EtUjgGekiws9UwS9doKRy09axKCXgrWPs3v3c2xfbOHsxS4kSSQUDhMO+vEHw9zqmYx90kFe
      6RaefWYXyv6LDPjAHVay6aEneO65Z9mQI1J9YYCg38qJ/VWMe7wEw/Lk9kET1QIwLijm4U1l
      xBtuHgjFSIjRMTtmi4mgy0Fl5WEO73uPhu5RbpWzOaNoKZmJJsSwH7eox6K59lkk6GPE6iQ+
      yUx/SwM9g52crjhFt9U+d52TmRFRHQLdiuvt0FpTPMXLE4AI40OT7Nj9GeI0itvs5JKY6Gui
      uv4SS7Y+hEUJg1fs0Ho1MeYkliUaWVBYRnG3nvW7ZDv0fEAWwA1cs0PHEHD0caSmndQNhSTn
      FhCvvX3Ubutr4sIlP5t37sRi+PD2f8UOnajHM9XByXNtpO2UM0DPJ6JYABKeqXHGHV4m7Q6G
      Bi7BgnS0UoSJ0X76VHqcoz0Qk4oaAeGOdmiRtqYmjJmrsY8NY0dJSmYmRAIMDw0QdGuYHOhG
      n7QMAR0q5RTd7b1kpaeSYNLftx7L3ExUCyDgcTI+PkV24WKC7klc3iTMyYWk2wcZH/egNmax
      pSAXjUJkUVE+cHlu4HZ7EK+bCas0GhbklzDutjM+DqAmbkEmmVl5dA3YGJ8AXfJiyhdmogDW
      bFpNd78NXyjpQXRc5jpkO/QsCbnGOFvXiDd4bSqckLGIZYsy5sQOPfLdv0Jhle3Qc0UUjwB3
      h9qUTPmWhx50M2TuEVH9GFRGRh4B5jlaiwJVSL5PzRWyAOY5qaUa9H7t9F+UuSvkW4tMVCML
      QCaqkQUgE9VE8RxAwjHURsWZFgKRCIb4bMo3lKIaOc9rlX1YDEoUKgNL1m5gYfr0L8ieHGyn
      9mIrDm+YmOR8dmxZSW/tIc63T6LSKFFqTKzdtp30WLBZ3VhS46P55M8bovo30JhS2LqrAJNW
      oLHqKD3DUxRJEUrKn6C8IAbPQAPvt/ZRmBKLNxBAGfbjQ0dcrOEmQ1xYVLFi404SjUrO7N3L
      gG8lAUHPlp1Pkpaox95dRWXDIKaSEMcOtLJi51pS4uIxG+QJ7oMkikMgAZ0pDi1Bxga6GHYp
      SU2MRUIi4PfidjrouTRKcnI8IY+D01WHOXGiimGb55b7AZKz8kmK1RHwTGGTjCRqAUnE5/Pi
      stvo6rWRnpmIY3yUKaeNgb5+ptz++91pmRuI6hEAMUJn/Wm6R73ozUno1SqkSIj2C1X4+zQI
      KjVZWUZAYmrCz2O7P43ptmdMwtpxntNtNtZu306sAgg4qDtTRYxBhVJtpChGQ0Z2CTkNEdaU
      r5Xt0POAqBaAoFSxZN3DLJZEhlpqaOwaotSgYdn6HZTnxyD6hjlwooOMjcUkZefe4eKH0Y5a
      Gse1PP7ETrTKDwdWXRzlW0tJSzQQ9PZypKKFrF1Z96dzMjMiigUQorvuPCNhFTFqgdGBCTJL
      FyF5wwz0NFHv1uK2DaGKL0LLzan//5AIrU3NKFKW0trYAKjIW7wEQh46WpsYi1XjGLmEJWc9
      Cgzo1Dbqz1wkvzCfBfHT7zeWmTui2A0qEfK6GB4dIxgGY1wSyQlmJO8kvcM2AJTaGNLSUtAK
      Ik6vH0usiUjQy8joOOHItdOmN1nAO4XTH/6wREl6bh64rIxMuJAAtT6WjAUpqATwOsaxjruI
      TUkj8Q77AWw2G5oPfoDePzqH5yG6iWIB3B1h7xQt7d0ErktXGJucTUF28j3P8iALYO6J4hDo
      7lAZ4li2cvWDbobMPeL/AN9qpq1M5Yz8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='City/Yroi/HousePrice' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      gJ+7OAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='House Type and Rent Ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='House_Recap_Investment' width='192'>
      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
      +wLpnNp/AermAd2K9c1oAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Maps' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MapsXOccupancyRate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table_HousePrice_HouseType' width='192'>
      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
      JAqLUSwdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 cities based on  ADJ_AIRBNB_YROI' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 cities based on RENT_YROI' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 types of house based on  ADJ_AIRBNB_YRO' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 types of house based on  RENT_YROI' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAOfklEQVR4nO3d2W4bd5bH8W9Vcd8kkaKo3bHdTqcXxx5MYzDAXAwwT5Y3mEeYh+ibHqC7
      MUD3oNFJzyRt2VZsbbFkcd+32qvmQkviJBrQMcsW8T+fC8OyxcNDSj9Wsar4P1oYhiFCKEr/
      0A0I8SFJAITSJABCaRIAoTQJgFCaBEAoLdIAhGFIFEdZgyCYe82o6i5ar4vy8wrDcC51I98C
      LMoTGlXdReo1qlNCt/k5kF0goTQJgFBaLOo7OOq2cf35bgL9wMfQjbnWjKruIvUaBAGarqGh
      zbVuFL2GXPRr6O/2Gh55AH67/4zGZBz13Qjxk8gukFCaBEAoTQIglCYBEEqTAAilSQCE0iQA
      QmkSAKE0CYBQmgRAKO3GSyFGvRavzmskMssMW+doRoz7v3hIJq4Ti8fRNQ0Cm/39QyZOwFIS
      nCAknlkmhs/O7i4xQ/Ilbrcbf0PzK6vkUwly2Sye5+E4Lv6gyl/+foAXXF43ricpZBP4IXie
      i+fahIHPq1enmLb7vh6DED/ZjQE4P9pn6MXJZhKkMlmKhSym7XL3/gMSl6/sgWPiGynwHfRY
      glK5gut5LBey73yVnhDvw427QOWtu2RMi3g8wc/u3yfQDHLZFAEGZycHjEyXpdIaK4UC5XIF
      HY+p5bC+UcBzTDTZ/REL4MYAJFJpEqn0xRep5PW/68DO3Qc/dguSqcxF0XQWiO4jdkLMi7xM
      C6VJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqLfF0gTdPQtPkutEQIc167Kbq60uutrqtF
      OSTvanVofc7XBXmeRyw2/+xGUXeRevV9H13X5/6CFUWvYRji+/4715VdIKE0CYBQmgRAKE0C
      IJQmARBKkwAIpUkAhNIiPxH2x6MDxo4z15pBGKBr889uFHUXrVdNm/+EmCh6Dbk8x/SOdSMP
      wJN6VSbEiFtLdoGE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNLeOBMc+h5jy8EI
      PQZjk9Vymfj3Vnl2rCmDscVqqYimQafVIDSSZBLaxb//yG2EuK2+/U0NQ05Pjth/ccjr83MS
      hs/XL47otRu0usPrb+v1+wza57SGJoQ2h4enaLrO+esqMd3l2d5Tfv/7P9AdTj/E4xHirVwH
      wBq1eHnapN9tYZkW1WqDdDbN0fFrisv56xuk4wY2KUr5FIQGm1trHB0e4zkmtVqL3EqJzc0t
      ioXMB3lAQryN612gZL7Mv/1riePjYzTfwfYDIKSysY6hX10dGPLy4JBMoYQ5HeP7PsPhiEQy
      STzuE/gXC0wEzoTucMpKPv0BHpIQs7sOgKZpGIbBgwc/HH4x6DQ4b3TQE2l+88//8sb/LS0t
      /7DqnS1ABmSI22+my6GXShWWSpWoexHivZPDNUJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJ
      AITSIl8X6KOVIsuZ+V4XFAYhmj7/kSNR1F2kXgkvR67Mu2wkvV7+8Y7DPGRCTMR1F6lXmRAj
      hGIkAEJpEgChNAmAUJoEQChNAiCUJgEQSov8RNh//M9f6ZjzXSEifPfzH++t7qL1CovxHMyr
      18gDMLAsOlNZIkXcTrILJJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUdn0mOAxd
      vn72As9Iko8HTGyX/Mo6u5urb9ygXX9NY+jwq4/vAQFf/u0LltZ20J0RE9shX1wnmzAolYrv
      +7EI8dautwCaFqOQT+G4LtPplDDwcVyLL/7y3zQ6g+sbLK+uo3nWxReBjecbOI6DOZ0Q+B7m
      aMDnn38hE2LEQrgOQOha9EYW4+HocmGAANOyWClvUiktXX0XzeoZp6enDAZDhmOHbD7NoN8H
      TUMDnNBgrZiP5AIwIebtelWIqxUcrlYE+O7fh93m9YCMn9+/c3l137dTY67W0fjuba78+5//
      i8Zk/H4ejRBv6Y0JMd/95f3u378/IOPN3/Efvw3IhBhx+8lRIKE0CYBQmgRAKE0CIJQmARBK
      kwAIpUkAhNIkAEJpEgChtMgHZHQmEwLmexe+72MYxlxrRlV3oXoNgosBGXOtGuVzEGAY7/Ya
      LhNiIq67SL3KhBghFCMBEEqTAAilSQCE0iQAQmkSAKG0yOcDPKlXMT1vrjWDy+PV8xZF3UXq
      NQyCy4nu8z0Mepufg8gD8MejA/lMsLi1ZBdIKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmA
      UJoEQCjt/z0TPB700FM5OrVXeHqaj3a2frDsebN2BokCidCi0Rly5949UvH5f/xNiCjcuAUI
      fJtnT5/Q7g6xfR3d6tFotTg8eoXlBRff5NtoyQK119/Q6Y+4s1Ni/+lTfve7/5QBGWIh3LgF
      OHz+FDcIabQ7+MMGyVSGrXQfyyiSvPogsp5g2DqisnWHXvWYw2OTfLFIMpmkWMjI8uji1rsx
      AB8//Ed2hm1GXoK6NyTUDOKpLGupwvVuUGAPqHUnVOJD0pkME9slFkvgBV26wykr+fT7ehxC
      /CQ/aVWIs5MDRqbLcqnCZqV04/eFYSgTYsSt9pMuh965+2DefQjxQchhUKE0CYBQmgRAKE0C
      IJQmARBKkwAIpUkAhNIkAEJpka8LlE8msX1/rjVDQrS5j3GIpq70ervryoCMiOsuUq8yIEMI
      xUgAhNIkAEJpEgChNAmAUJoEQChNAiCUFvmJsN/uP6Vv23OtGYYBmjb/7EZRd7F6DS8/7z3n
      E2yRPAfhZb+3fELMUbcjnwkWt5bsAgmlSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAI
      pd14Jnjcb/PN6zrljW169VM8Yjz4+SckY29mxhr3OW0OycV8eqMJ5Y1dMgmDXC4befNCvKsb
      twDZ/DKFXIrRcIRpu2i+w7Bd5a//++zbCTFhwMlpFdscMxqPyWVTdBpV/vSnP8uEGLEQbgyA
      HwTkcnlMc0IymSabTmBPJ6zt3CV1uRUwhy1GU4fqeZVAj5PPFwh1g93dXRmOIRbCjbtA5nhA
      vdlhY2ObXuOMqRfn3mYFx0i+MSDjn37zmE6ng2eNqTVarG99hNmr0x+ZLEsIxC0X+bIoMiFG
      3GZyFEgoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKC3ydYF+XdngjjPfhbGCMESf
      8xCHqOouUq8XC00tRq8wn35lQkzEdRepV5kQI4RiJABCaZG/B/B9n3nvZQVBgD/nyZNR1V20
      XqN4H3Cbn4PIA2AYxtzfA1zVjUIUdRep1yjeA8D8e716UX3XupHvAkXxZEYRqKjqSq+3u26k
      R4GEuO2Mzz777LMo78ActNjbP8AlxlI+w9nJAcffnJHNpnj2bJ+pE9JvnnFyVme1vIahf2eL
      EYYcfP2Ms1qT1XIZvClffvWUse0z7FT55rRKJq2zt/cCPZEin53tI5iBb/Pkqyf0JxarxRX6
      zXP2Xx6hxTM0jvcYhAWcQY3DwyMS+VXSidk2s69PDjk8+YZCaY24FvJ87wmNzpB0LODvzw/Z
      Wl/hb59/iR1qLC/lZxtDEQZ8/WyP82aXtfIqvjXkq719pi6MOzWOjl4RT+q8eHGApyVYymVm
      6rXfrLJ/cAjxLPlMkuOXzzk5q5NLxzk4PGIwsamfHtIdWhRLKzOPzHh19ILjkzNWKusYocfT
      vT3agwmaO+H45IQAncOXLxlOXVaLSzPVdKYDnjzdx3RhZSlP/fUJB4cnJNNZTo4PqbX6TLp1
      qq0eheUVYsZsW4bjl8+j3wV6Xe/y+PEjzGEHCJk6Ib+4v8PLved89PAxnjXADRPcK+foms6b
      Nw5cgniWjWKGsenSr9bY+dUjAmeM4xv8bLNEuzvCiMcwTWvmntxBk6XtT9D8i/tr9cc8evyQ
      QafF3Z0NTMenP7Z59A8PaVVfz1x34vg8/vk2540hvmuSKpRZSoTE8iVy6TiB56En4he9zrrd
      dado2RLLmTiOG9CpNbj38DGeOWRrZ5dEPEa33eOTTx8xHXRn7rXZG/H4008ZdpqAf/0zmBpZ
      KqUCMSOGpmlYlknwFvsIlgefPljjvDnBmgworG2T0j2yhWVsy2TUarP58S/BM2eu2Wm3uf/J
      r3HNIQCDicOjR7+k0+6RS8Xw/AA0Hc+xcK9WLJmBGxrRByCX1Kk2W3gYeJ6P79q0Oh1Wyiu0
      qw0cDxx7SnswIR3/3iutbuCYE/rDCTFDI5VL0641cNwA1zFp9wek0jnu3r3DsNeZuSc9lWXc
      bWA7Lp7nEdcCms0mxFLYto1t22iBS6teJZae7VUKwHcd6s0u2WyCUDOYjgcMpzZ64F3UdQN2
      d3exJsOZaxJLYI8HjCcmmhaSziZp1Rs4XsjzZ8/Z+ugu+ZRBu9nEZ/Y3hEk9pNFqgpHA88Lr
      n4HTq9KewOZ6kdXKNgnfwn6LAy2eY1Nr9Mhl4+ixBKN+j6npYLsed+9sM3WmdBpNbHf2oulk
      gna7heuHeJ538bNp1MCIky+u49sTCiurrBZSDMazB8u17ejfA4RhSKNWpbi6erHKRHmZ9mDK
      erlEu1EjX6qguVMGpk+5tPyDTe10PGDqavjTPoXKNpNOg+xyGSOw6I0dysUC1WqV1fUtUt8P
      0M1d0W01SeRW6DRr7O5sU6s1WFuvUD8/xSPO1nqZZrvP5sbazG/kPcek1RuTT4RYRo6EbxLE
      0ujelE5/xHKxjDsdkCoUKcy4uwYwGfawwzjWsMvq5jb9Vp1CaY1+s4bpBGztbNNpNlitbBA3
      Zus1DDxqtSZrq0vUulPWllIMTJ98UqPe6pJbKhIPbVwtSXnGXRUAx5rQHVmkcCBbBGuInsxj
      BBad/oStrU367QbpQolMKj5j1ZBmvUahtEajes725jr1dp/NSonqeZXscomE5tEfO2xUysx6
      3MWajuRNsFCbnAkWSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglPZ/YNobKvkVYlMAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top_Per_Airbnb_Or_Rent' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAdtklEQVR4nO3daXAb6Z3f8W93AyBAECBIkOB9i6QOUrdG9znSzMjjsae8ztrObtZx4njt
      bNXaW8mL7Ka21q6kapPaF0lqK2WXdzext5z12GXHGdsznkvS6B6dHJ2kKPEAD/AmQAIggEYf
      ecFDFzUjjTQSgX4+b1jsRgNPN/6/7qcbQD+SaZomgmBBkiRJ8rNuhCA8SyIAgqWJAAiWJgIg
      WJoIgGBpIgCCpYkACJYmAiBYmgiAYGkiAIKliQAIlmZ71g0QAEwMPcFYsJ9pVzmNZZ6FOYaW
      IjoWYjyVR2ltMe5n2Mp7mdMDdAxGF50n2xz4yhooyXvKjXpEIgBLgok6c5Of/sdv887q/8Sb
      f75zYU46MsgH//BX/LBnG3/xD99iwzNs5b2M9tf5r98/B6aBFhmgc1gjUF9PUQ44fWXs+fpf
      8+WWZ93KjyYCIHxiyuY/4UebAS1J5I2/5JW/neIr/+WH/EHNs27ZwxMByECmrhKPjBIaGiem
      GiiOPAoCZZQUeciRIRkZZmh0CqWgnLJiD3ZgZqKfwfEUeYFyigtykZJhRkLDjE8lSJsSdqeX
      4opyijxO7LKEqU4R6h9kfDqJ7C6mqrocb46CLD10K9HVBBP9XYzpRdQ0lpEnAWjMTI0xFIri
      KKnEL08zNBxGz3HjTE8zGVfB7qW4rJRAYR52CdBTTI0PMzwWJq4ayHY3ReUVBHxuHMpDN2hR
      IgCZxkgRHbrOsbfe5ND5PpJImEoeFSt38NLn9rK2Kp/hS+/wd/90nPz93+Qb/2wDBUD/qZ/z
      t6/3sfrL3+Qr+2uItL3Fa6+fpmtCRbLZyMnzs+LFr/CFrY0UO+P0nX+Ln/72NIPhFKoSYMsX
      /4gvbK/Fa1d42JJLR0c499pf86PuTXznv32H7V4J0mF6zvyc7/+kl5Zv/Cn7jKP84O/eJlG3
      mQ3uMa71DhNWPTRsf5nff3UnTYUK0wOXOfy7dzh9fZBY2kQ3c6ja9BKff3kHy0vmQvIJiQAs
      JYaOOtLB6dO335b09DA3R5K3/4+G+PDQz/jlSRv7/viv+MIGL+Ntb/CTH7/JL40c/F8/+BCX
      9gY4+8773JK389X/8AU2V9uYuHWUE8MGelonHTnFP/6vQ6T3fo0/f2Ujwf/zHf7zD39F86p/
      y+aiXB5upyvh9BSwavtmfJcucfbDCNt2FaBHJhi60Uu8ZCXrVxXDFUDVyClsZN9Xv8UfOca4
      +Osf8b8Pv8uh8mqqdudw7ndvcCpUzPPf/GP2NrmZPPca//3v3+K9klKKX1hLqePRN/U8EYCl
      RFeZuXWc1167ujDJUBNM9sWhFEBnemSASxeC5LZ+nYNbynED7paNbN90iZ+dv8K1vudp/dgX
      suN0ObBNTxDsvkWxo5ySuud5dbkNWYKBI0e5FMtjb26EzstnsPn8OEJXuTqWZoOfhwwA4HDj
      q9/E2qKTnD99nsnteyE8wq2BOCWrNrCiAIYA8vwEquupL8gBKmlZvY4Vp39DT08vwRqTqzfG
      SPjLSEx0cO4DQJVwMcxgb5hIFEr9j7qhbxMBWErsLnwb/g3/446rQKnxbt7/wV/xwx6ANInk
      JGMxBVdxEUXzD8p14fK6YXqKiYnph3ihClbv2EnXW6c4/eZPufFhLY3NTSxvXceKSh/DQ8Oo
      kTHOvJPmlsuOBNStb6bMaXvED47s5Pmq2bixklPHznB2aB0NQzfpm/bTuqEZD+ZsAO6R53aT
      55aIxWKMhlSmpwfoCcV5Z/IGrvkH5ZdTW1VI7mNWsAhARpGxKS5yHSbTMwlmgFwANU06qWLm
      5OBy5UD6457HQdW2L/Kt1t30tn/IuXPnOP2z/8nha1/lz752AIczB9m9kle/8+852BjA9Rgf
      l9ryCqjauJVlx9/k3LEb5KoDRIvXsanZDcQWWcIkkUiQUCXceXnk50Wx2fys3P8VvvGH+2l0
      Pd5J773EJ8EZxYGnoJymujxity7z4WCUtK4y1d/LrZvj2CvrqK/0YFMUbOikUilUTSc5PcrY
      ZIS4Ovc0yXGCXX0MJ1xUbTjAV771p/zhriqmbrYzNB2ldGULgXSQU6fbGYgkSatRxrpvMhDV
      MB71FgpyLgWlq9nY4uDae29yNjhFYN06au/st+s6mpZG1Q3SsVGuXb1Gd9xFTXUVdTVVVJbb
      GL1+mWvtI8TSBoauEhvvpW94injq8baoOAJkGHdxBRv27qXzFxd46+evM7osl0iwgxvxSp77
      zBaWF4MZqaA64OLS9ZO8/bsYxUqSYO8oUdU5+ySpIdrPXKA/4cQf8OKUkvSGDEqX1VKc58Jf
      9Twv7+7jl0d+xa+0YZaXKMQGY5S+XEmJ2/YIl0IBJFy+Ylasa8X5xv/jfO5evrapgbvOW1Nh
      BtvP8O7b/agTPVy92o9zxS62rq4jP5Bi0/ZtdP/yFMd+8xrTwWUU5Zgkp4YwyvewbV0+7pxP
      vj2V7373u9/95IsLT4aJaaaJTc6Q17iRbc1Ft+foGqmZOPibWLu+Dp/iwltcRW2Zg0hvO509
      wyQcVWx68bPs39JAvgw5Xi+eXBvxkQEGQmG0vBrqawIEAmU0rlhBdUUp+UqCyb5b3LjZRXBg
      DK2whRdf2U9rZSE5OcU0rqol34ww1BdkeNIkf+VmNq8sxWOTke4NgGliJCKMU8r6Leuoyr1n
      vmJDSycJXb7ATN3n+NLBJjwSgMpE8Drnz10jIruwT4/QFzbwr9zNywd3saYqD1lyUlxZTUXA
      RWJskP5gH6HRabT8Rla3NlHtd2H7hP2Y733ve9+TxH2BhE+XiZGapvvMb/nxz09S+Ht/yZ/t
      LZubF6Pz2C/4wY8/oOjlb/MXX1jxVFsmSZIkukDCpyhNPNzN+TdPcPlWB9qyF3lhfdnHL/YU
      iQAInyKddCrM0GAEpW4Xv7f/BVbl3znfjq9sOdv35pBXX/BMWii6QI9B13UkSWJ0dBSv10sk
      EqGgoIDJyUmKiooYHR2lpKSE4eFhysvLGRwcpLKykr6+Pmpqaujt7aW2tpZgMEh1dTUDAwNU
      VFQQCoUoLS1lZGSEQCDA+Pg4hYWFhMNhfD4f09PTeDweYrEYubm5JBIJnE4nqqpis9nQdR1Z
      nu0Ym6aJLMtomobdbkdVVZxOJzMzM7jdbmKxGF6vl6mpKXw+H5OTk/j9fsbHxwkEAoyMjKCq
      KjU1NQwMDFBVVUVfXx+1tbX09PQs+fYPDw9TVlZGKBSisrKS/v5+qqur6e3tpaGhQXSBHoem
      aSiKQiqVQtdnLzsahkEymVz4a5rmwt9EIrHwF7jr753z71zuzue783Vyc3NRVZWcnJyFwlFV
      daFddxaQoiik02kkSbrrsfNFN/+ci61DIpFAVdWF9tzb3nv/v3O9732uO1/D5XIttD+dTj+w
      /YZhYLPZSKfTyLJ8X/vvbfeD3oMHbXtxBHgMqVQKRVGw2cR+JBOJm+MKlicCIFiaCIBgaSIA
      gqWJAAiWJgIgWFrWXL8zNJWe0/+Xc4P3z1Nc+VS27mRr/WI3qYkz2tPBh2duMnnnZG8lLS2t
      tFTnL7KMkC2yJgBIErm+Ukr1OycapKJj9N5ox960e/Hl1Cijg/30TULNylLs89NzfeQ5s2fz
      CIvLmndYVuyUte7hrq9aaTOMd59hdNxDS7Vr8QUTCZJpGe+qLezdXZs9G0R4KFl8DmCSmpmi
      r/0m9uaNVLsX/xWHmkiQTmu4/YWi+C0oe99zPUV8vIvrEyU8t6+YB905I5FIMN57hSvtYUbP
      Kcg2JwUVy1jZuoLaYncWbyABsjYAJulkjNCNq2i1n6fW8+Df8LmKalm9/SAl8dnljFSMsVAH
      p09ESW7ezKryXCRmv6Cl63edYGAYBoZhkE5/7K/QhSUqOwNgqMxM3uJKsJB1Xw48cO8P4PD4
      qVnlZ/Z2liZGOkFk8AqnTvXS3TlAZXkTPlj4duKdTNNEkqRF5wmZIQsDYKKlZhi81kay/rM0
      +ZRHWFZCtudSWFVJqXeYgWiUBCwE4N5C13VdfBs0w2XfrsvUSE51c/Wmh5aNZTzg2s8cHV1X
      UdV7Jms6umliKjKPEh8h82RdAHQ1ycj1c4Rrt7Ky4OP2zDMMd13g8K8P8WFfmISmoycmuNXW
      Rvt4krzycnxPpdXCs5Jdx25TIzXVyfnLbtb8i2ruv/KpMT18i0vn21FaDrKt1omvqIzSgstc
      f/c1jsVSmCjYPSXUt2xgXaP/I88fhMyXXQFAxpFfz47PV1FQaL9vrpmcYizYSWe0gP1FdkAh
      11fJ8uc8BBrCRJMapqTgcOfj9xfgdWXZ5hHuY6GfROrERvu5fv4y5pp9bKjIe+z0i59EZjZJ
      kiQLBcBEU1PMxGaw+wof64av80QAMpvFAvDkiQBkNvGjeMHyRAAESxMBECxNBECwNBEAwdJE
      AARLE9fvspxhGuiGBkgosoL8FC78maaJZmizN+aVFRR56X6lUAQgi5mmyUR8nO6JWyiyjXp/
      Az5XwacaAtM0SWkpbo13Mh4fo97fQKWv+qkE75MQAchiJrMBONt3mmhymudqtrGhchP5Lt+n
      UpDzxd8+cpUjt94lmoziUBxU5FfBkx3d9IlZmrEUnhifq4BybyWx1DSneo5xceAcU4kIhmk8
      0dcxTRNVV+kYucahm2/TFw5Sll9OibcM6b5R9ZYOcQTIYhISxXkBttRuxzQNLvSf4WTPUSQk
      1s8dCZ5EcZqmSVpP0z5yjfduvkV/OMjK0lb2LjtAja8Gaanu/hEByGqSJCEjU+opY2vdTkxM
      LvSf5UTP+yDNhcCZ/1ghuKv4O39HX7iXlSWt7Gt6gbqCehTZJo4AwrMzH4IyTxnb63ZhmiYX
      Bs5yousIErC+chNeZ/7CYx/F/NWejtHrvHvjDYLhXlaWtrK/+SXqCuuRJWVJFz+IAFiCJElI
      kkKpp5wd9XuQgPP9ZznedQSYDYHH6QXz4UMwX/ztw1d5+8YbBMM9tJSuZn/zZ6grrEORM6O0
      MqOVwhMhy7Pdoe31uzGBC/1nOd59BJBYX7nxoUOwUPwj12aLf7KHVWWr2d98MKOKH0QALGc2
      BOVzITC52H+OE91HkCRYV/HxIVjo9oxc552O+eJv5UDzQeoK6zOq+EEEwJJkWabMU86Ouj0A
      XFzoDkmsq9jwwBDMn/DeGG3nnRtv0DvZzarSVg40fyYjix9EACxLlmXKvOXsqNsNpsnFgXMc
      nzsxXrtICG4X/3Xe7fwdPZPdrCxt4cDyzC1+EAGwtNkQVLC9fg8mzIZg7pxgbcX6hRAApHWV
      jtF2DnW+Re9ENytKVmX0nn9e5rZceCJkWabcW8GO+j2AycWB8xyfOydYU74Bj9Oz0O05dPNt
      eie7aS5ZyYHmg9T7GzK6+EEEQODuEJhA28B5js2dE6wpX0cw3Mvhm28TnOymObCC55teor6w
      AVlaut/yfFgiAAIwH4JKdtbvAdOkbfACx7sOoxsal0NtBCd7aCpezr6mFxf2/Ev9Q66HIW6L
      8hiy8bYohmEwOD3A8a4jtA2cI8fmJJqK0hRYzr7GF1hW1IhNtmdH8Yvbogj3mu8ObareQnVB
      DUNTgxS4CtlcvZV6f0PWFP88EQDhLvNfa46loiTTKeyKA83QiKZiJNMpTEyyqdMgAiAsME2T
      ZDpJ52g7x7vfZyQ2zPLSlaS0JCd7jnIpdJFYKppVIRABEID54k/QOdbOse4j9EeCNBQ1sr/p
      JdZVbmQ6GeFY12E+HLxILBVbWCbTZc3Zm2noREd6GI3fP0+yOcgrLKPEe/8t0wEMLcXM9CST
      kRlUFFx5PgoKvOTarbF/mC/+G2MdnOg+Qn+4l3r/MnY17GNZUSP5rgIA2gbPc6zrMBKwpmID
      nhzPs234E5A1ATC0NMEzr/NO151TTTQ1wUzKRtNnv8UfbFxkvBc9RXSok4tnz3KtL0IKO3kl
      y1izcROr64vJzZottDjTNEmkE3SOdXCi+336wkHq/MvY1bCXBv8yHEoOFd5KdtbvBWY/Izja
      dZj5T4vzcjwZfVKcNW+v4nDS+uq/o/XOiUaKyMBVjrzbQWWtd5GlTNLREJ2XP6RXb+bgv9pM
      jW2UaydOcKmtDVf+HlaXOJbwD/oez53Ff7L7ffojQer8Deys30ODv5Ecm3PutwQSFfnzITDn
      QvDe3KfFmR2CLD7Gm+jJGGO9N5gMbGRl0WKrqjM1OspEwkHTtudoyLdjc1ewav1KyvOShIIj
      ZOsIwPPFf3Osg5M9R+mPBKktrGdH/R6WFTUtFP88WZbnQrCPdZUbiSQiHL11iEuhttkT4ww9
      H8jeABga8UiI9ltJVmxsxL3og2aIxhKoahFlpbdHA7MVFlFgd0AkzPTTau9TNFv8M3PFf4z+
      cJCawnp21O9mWVHjfcU/794QhBNhjnbNhiCaoSHImi7Q3Ux0Nc5k8ArD+Vt4vuxBOdfRMEF2
      475zSyhOXIoNRVcXjgDzo8Lf9SqmmZEjxSfSCbomOjkdPEFfuJeq/Bq2VG+nNr8eG3Y0TfvI
      5QPuErZV70LTNK4MtXGs6xCGYdBatoY8R2adGGdnAEyd5PQwHR1R6vY+aO8/R5aRbbZ7NoSM
      rCgod+zQDMNA1/W7X8Y00TQtY/q/83v+W+M3OTtwisHpfqp8NWyu2kZNfh0Kto8t/nmB3BK2
      1exCAq4MX+LYrUOk02laSlfjyfFmzDbJwgCYGOkEE71t9Dme44u1i1/6nCUh6wa6GidugH/+
      QGGkSKopVMO3MFC2zWa77zs/mfRdoPniHwj3cXH4LEPRQWoK69hWt5PGomZc9txHLtp6VwMO
      hwNZUbgcauPs4ClychysLl+XMSHIvnMA0yAVG6HjSpjqbSsp/MgHO3HlOLArU0xO3d67G/Fp
      oroOuR5yP+32PgW3+/w3ON17gv5wkKqCGrbVfvLiB5AlmUpfFTvr97C6fB2RRJgT3Ue5HGpj
      OjmdEecEWRcAQ0sR7mujV17P+pqcj3l0Dj6/D49ziu4rQSaTOoY6zdDNHkYS4KkIfHT3KQOY
      pslMeoabY52c7j1BX6SXqoIattbuYFnxJy9+mLvnkCRTkV/Fjvo9tJatJZIIc7L7KFeGMiME
      S//Y/ShMnXR8mPaLY5TueJnAffE2SEbHGRoYQy5poqbQTq6/nOqqEEPXznBcHaBAjjI2GsNR
      1kJjuTejPwNY6POPdfJB8AT9kSBVvtnibyxuJvcxin+eJM3edr0yv2r298XA1aFLnOw5BkBr
      2Vq8j3n3uU9Tlh0BTEzS2Eu3sHnZ/Z0XMx1nvPcyJ89cYzQxd0XHUUDlig1sXlOOPDlA/5iK
      p24NmzY0U+J6ys1/wkxMxuJjXApdoD8SpNJXxZaF4nc/saKcD0GFr4rtdbtoKVtDJBHmXN8H
      9EeCS/ookF1HAMmG09fMrs8sNtNAjUUYH54mf9U2Witud48UVyE1q3dTs/qptfSpMQwdm2xn
      mb+JNRXraSp6ssU/T5IkbLKNSl812+p2YZMVwjNh0rqGydINgIV+EWaQmJpkqH+EvOZVBD7q
      4tBDWupXgUzTJJaKMhobRZZkAnkBch1PvvjvfU3NSDMSHSGWilKcF6Aw178ku0BipPjHtNQD
      ALMFOb8HlpCeSiEuvKbJwneJliJJkqSl+84JT4QkSU/9/vwLr7k06/4uWXYSLAiPRgRAsDQR
      AMHSRAAESxMBECxNBECwNBEAwdJEAARLEwEQLE0EQLA0EQDB0kQABEsTARAsTQRAsDQRAMHS
      RAAESxMBECxNBECwNBEAwdJEAARLEwEQLE0EQLA0EQDB0kQABEsTARAsTQRAsDQRAMHSsuze
      oCaGlmDk2iFef+Mswak0iqeUFZtf5pUDjSw2VDaE6Tp/lDd+foqBOycHWjjwwoscWF3yVFou
      PBtZFQAznWT04i/4x1MO9nz523zJr5COTDA2OMMULB6AxAyxhJ3A9i/xpb2NLIyJIdvIyfm4
      IZaETJdFATBQ1X7Onoix+Z//azaUOFAkwJOPv9x48GKJBCk1jVRcSsCb2UMiCY8ue84BdA21
      6yJt3nVsKs3BJs/el16SZRS7bWG403slEgk0TaOwqEgUvwVlzRHAMAyiI8MorhJO/uRvOH5p
      gKm0gqd0Jdtf/SIvrvAtGoJkMkn/pSMc/fVRfi1LKA4P5Ss2s3v/LtbV+nA89TURnqasGSHG
      UBN0/fZv+H57FQdf2c+WxlJyiDF0/Rhvvhek4Ut/wgu190fANA0MXccwAQy02DBXjh/ig5CL
      NfteZmeTFxlQVXXRUdQNw1jSg8AJD+b1erNrhBjZ5qBsw4vsby2bm+Kjqnkr+8KTvHG1mwO1
      jfd1cyRJRrHJc0cHE5uvmk3795J+6wKhzluMNa2nBLDb7djtdw8spqoqDocDRXlQB0tY6rIm
      ALIsEygrY/JSP0nKcc1XuiMHd2kJno4kabinS2Myu/OWmB3Gau6vy0Wu04lTN5g/ff6oca6W
      6hhYwsfLnpNgRUGpraO26yxnxnUM08Q0TYxUktjQCEmvZ5H+vEY6PcNMXEM3Zh9vmibGTJy4
      qpK2O3gCg0kKS1j2BEBSyPGuY/fmJId+/CuujMVIxifou3GOE9dlnltfC5iYhk5aVdF0E4gz
      cO0ov/j7f+Lw1QEm4zPMTAY5f/gobWNpAsvqKHrGqyV8urLmJHiWiZaa5ubRn/GrQzcY02wU
      1G7gwKuvsLXKhWmqjHdf4P13L5K761/y8ko3ZnqaUMc5jrx3gisDETQ5j+LmzTy/fwfraxe/
      cjQvE4ZJFR7MYuMEmxixYTrOH+f09Ep+/3MteB7zGUUAMpskSVL2dIE+lkEsliKeKmTPC49f
      /EJ2sNAR4MkTR4DMZrEjgCDcTwRAsDQRAMHSRAAESxMBECxNBECwNBEAwdJEAARLEwEQLE0E
      QLA0EQDB0kQABEsTARAsTQRAsDQRAMHSRAAESxMBECxNBECwNBEAwdJEAARLEwEQLE0EQLA0
      EQDB0kQABEsTARAsTQRAsDQRAMHSRAAESxMBECwty25rbGLqKlOD17jQ1s14Qkd25lPesJb1
      raW3R4G/h54IM9h1laudIaKGi6Ka5axaUU9pXpZtHuE+WXUEMPU0U92nePvYTRIuPyWlAfxu
      G+nxcaYetJAaYbDjImfb+km5iwnkS4S7PuT8xU5Gk0+z9cKzkEW7OANNHeXqyRtIzQfYsqaW
      QpeEkUoQn04+YKgjk5nJEMH+EFL1VnZtrsMnxxi68gGng73cHKykuMErRpDPYtlzBDB01NA1
      zser2ba+gaJcBVmSsTnd5Af85C26UIqpiTDRhJf61jr8TgXFkU9ZUz2lLpPp0Cjxp7wawtOV
      NUcA09CJD3Yz7Wlh7MyvORmcZEaTcBVU0bRxM2sr3YukPUkipZLWffh9t48RituLR1GIxaPM
      wAPCI2SD7AmAaRKPhJmZDDFWU0FdcxkYSWLjIS4ffg/5pVdYG7g3Aia6LKM43OTeOUt24nQ4
      cGg6+twkTdPQdf2upQ3DwDAM0un0p7lqwqcoawKACboJ7pJG1qxdgd/jREFjZrQL+/FjnO8Y
      Zm2g/P7lDBNDv13ocxMxdAPduD1Flu8/fpimiSRJi84TMkPWBECSJfILCtFidgryXXMrZie3
      oITq+mKuBsNolN+zwsrs/3qcGY3bW0NPktA1dPP2SPGyLN9X6Lqui0HyMlzW7LokWSG3ppr8
      7kvciN2ebuo6WiKB7nAssrIu8twuHPZxhkbUhana5AThtAq+AjGcapbLmgAgKTiKVvNceYh3
      fnOSYFzD1GaYHOigrT1Bw4qKRVbWhi9QTGFuis7T5+ieSqPFQ1xvu85QzElZTQDHM1gV4enJ
      onGCTUxDIxrq4MzJ03QOJ0gj4fCUUN+6iS1r6vE5NKaHb3HpXDtKy0tsq3OBniQyeIOLZy/Q
      HoqSRsFdVEfLho2sbijB/RG9GzFOcGaTJEnKogDAbAh04pPDjE7GSZsSNpcXf6AYn1PBTE7Q
      fekk73d7OfDKTqrzZi99GlqSeGSC8XAM1bTh8hbiL8zH7fjoA6QIQGbLwgB8FJ3YaD/Xz1+G
      NftYX5H32FcARAAym8UCYKKpKWZiCey+AlxP4OxHBCCzWSwAT54IQGaTJEnKnqtAgvAJiAAI
      liYCIFiaCIBgaSIAgqWJAAiWJgIgWJoIgGBpIgCCpYkACJYmAiBYmgiAYGkiAIKl/X/6/QTz
      LpIbZAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
